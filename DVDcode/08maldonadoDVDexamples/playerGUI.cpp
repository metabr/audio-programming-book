// generated by Fast Light User Interface Designer (fluid) version 1.0107

#include "playerGUI.h"

void PlayerGUI::cb_txtStart_i(Fl_Value_Input*, void*) {
  setpos(this, TXTSTART);
}
void PlayerGUI::cb_txtStart(Fl_Value_Input* o, void* v) {
  ((PlayerGUI*)(o->parent()->parent()->user_data()))->cb_txtStart_i(o,v);
}

void PlayerGUI::cb_sldProgressBar_i(Fl_Slider*, void*) {
  setpos(this, SLID);
}
void PlayerGUI::cb_sldProgressBar(Fl_Slider* o, void* v) {
  ((PlayerGUI*)(o->parent()->parent()->user_data()))->cb_sldProgressBar_i(o,v);
}

void PlayerGUI::cb_butPlay_i(Fl_Button*, void*) {
  play(this);
}
void PlayerGUI::cb_butPlay(Fl_Button* o, void* v) {
  ((PlayerGUI*)(o->parent()->parent()->user_data()))->cb_butPlay_i(o,v);
}

void PlayerGUI::cb_butStop_i(Fl_Button*, void*) {
  stop(this);
}
void PlayerGUI::cb_butStop(Fl_Button* o, void* v) {
  ((PlayerGUI*)(o->parent()->parent()->user_data()))->cb_butStop_i(o,v);
}

void PlayerGUI::cb_butFF_i(Fl_Button*, void*) {
  ff(this);
}
void PlayerGUI::cb_butFF(Fl_Button* o, void* v) {
  ((PlayerGUI*)(o->parent()->parent()->user_data()))->cb_butFF_i(o,v);
}

void PlayerGUI::cb_butRew_i(Fl_Button*, void*) {
  rew(this);
}
void PlayerGUI::cb_butRew(Fl_Button* o, void* v) {
  ((PlayerGUI*)(o->parent()->parent()->user_data()))->cb_butRew_i(o,v);
}

void PlayerGUI::cb_Load_i(Fl_Menu_*, void*) {
  load(this);
}
void PlayerGUI::cb_Load(Fl_Menu_* o, void* v) {
  ((PlayerGUI*)(o->parent()->user_data()))->cb_Load_i(o,v);
}

void PlayerGUI::cb_E_i(Fl_Menu_*, void*) {
  MainWindow->hide();
}
void PlayerGUI::cb_E(Fl_Menu_* o, void* v) {
  ((PlayerGUI*)(o->parent()->user_data()))->cb_E_i(o,v);
}

Fl_Menu_Item PlayerGUI::menu_[] = {
 {"&File", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"&Load file", 0,  (Fl_Callback*)PlayerGUI::cb_Load, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"E&xit", 0,  (Fl_Callback*)PlayerGUI::cb_E, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {0,0,0,0,0,0,0,0,0}
};

PlayerGUI::PlayerGUI() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = MainWindow = new Fl_Double_Window(518, 193, "Audio file player");
    w = o;
    o->user_data((void*)(this));
    { Fl_Group* o = new Fl_Group(0, 25, 515, 165);
      o->box(FL_ENGRAVED_BOX);
      o->labelsize(15);
      o->align(FL_ALIGN_TOP_LEFT);
      { Fl_Value_Input* o = txtStart = new Fl_Value_Input(75, 35, 120, 20, "start :");
        o->tooltip("set start point in seconds");
        o->box(FL_THIN_DOWN_BOX);
        o->step(0.001);
        o->callback((Fl_Callback*)cb_txtStart);
      }
      { Fl_Value_Input* o = txtDur = new Fl_Value_Input(330, 35, 105, 20, "dur :");
        o->tooltip("set playing duration in secs");
        o->box(FL_THIN_DOWN_BOX);
        o->step(0.1);
      }
      { Fl_Slider* o = sldProgressBar = new Fl_Slider(5, 65, 505, 15);
        o->tooltip("Song progress position. You can modify it with the mouse.");
        o->type(3);
        o->box(FL_THIN_DOWN_BOX);
        o->selection_color((Fl_Color)4);
        o->callback((Fl_Callback*)cb_sldProgressBar);
      }
      { Fl_Value_Output* o = txtPos = new Fl_Value_Output(280, 80, 160, 20, "playing position:");
        o->box(FL_FLAT_BOX);
      }
      { Fl_Button* o = butPlay = new Fl_Button(100, 110, 60, 50, "@>");
        o->tooltip("play current file");
        o->box(FL_THIN_UP_BOX);
        o->labelsize(40);
        o->callback((Fl_Callback*)cb_butPlay);
      }
      { Fl_Button* o = butStop = new Fl_Button(280, 110, 60, 50, "@square");
        o->tooltip("stop playing");
        o->box(FL_THIN_UP_BOX);
        o->labelsize(20);
        o->callback((Fl_Callback*)cb_butStop);
      }
      { Fl_Button* o = butFF = new Fl_Button(340, 110, 60, 50, "@>>");
        o->tooltip("fast forward");
        o->box(FL_THIN_UP_BOX);
        o->labelsize(20);
        o->callback((Fl_Callback*)cb_butFF);
        o->when(FL_WHEN_CHANGED);
      }
      { Fl_Button* o = butRew = new Fl_Button(220, 110, 60, 50, "@<<");
        o->tooltip("rewind");
        o->box(FL_THIN_UP_BOX);
        o->labelsize(20);
        o->callback((Fl_Callback*)cb_butRew);
        o->when(FL_WHEN_CHANGED);
      }
      new Fl_Box(115, 155, 35, 25, "play");
      new Fl_Box(290, 155, 40, 25, "stop");
      new Fl_Box(350, 155, 35, 25, "ff");
      new Fl_Box(230, 155, 35, 25, "rew");
      o->end();
    }
    { Fl_Box* o = texFile = new Fl_Box(55, 0, 460, 20, "label");
      o->tooltip("Name of last selected audio file");
      o->box(FL_THIN_DOWN_BOX);
    }
    { Fl_Menu_Bar* o = new Fl_Menu_Bar(0, 1, 55, 20);
      o->box(FL_FLAT_BOX);
      o->menu(menu_);
    }
    o->end();
  }
  isPlaying = false;
isStopped = false;
filename[0] = '\0';
fc = new Fl_File_Chooser(".", "*", Fl_File_Chooser::SINGLE, "Open Audio File");
}

PlayerGUI::~PlayerGUI() {
  delete fc;
}

void PlayerGUI::show() {
  MainWindow->show();
}
