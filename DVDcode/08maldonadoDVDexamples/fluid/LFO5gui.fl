# data file for the Fltk User Interface Designer (fluid)
version 1.0104 
header_name {.h} 
code_name {.cpp}
decl {\#include "PortAudioStuff.h"} {public
} 

decl {\#include <FL/Fl_Box.H>} {public
} 

decl {class Fl_DrawShape;} {public
} 

decl {void drawWaveform(Fl_DrawShape*);} {public
} 

class Fl_DrawShape {: {public Fl_Box}
} {
  Function {Fl_DrawShape(int X, int Y, int W, int H, const char *l=0) : Fl_Box(X,Y,W,H,l)} {open
  } {}
  decl {float *table;} {public
  }
  decl {long tablen;} {public
  }
  Function {draw()} {} {
    code {Fl_Box::draw();
drawWaveform(this);} {}
  }
} 

class LFO5gui {open : {public PAstuff}
} {
  decl {bool isAudio;} {}
  Function {LFO5gui():PAstuff()} {} {
    Fl_Window mainWindow {
      label {Example of Multiple LFOs} open
      xywh {100 141 801 537} type Double labelsize 12 align 0 hide
      code0 {make_menu();}
    } {
      Fl_Box {joy[1]} {
        label {LFO 1 (controls audio modulator freq.)}
        callback {joy_callback(1);}
        xywh {5 25 230 220} box DOWN_BOX color 44 selection_color 1 labelsize 12 align 130 when 3
        code0 {\#include <FL/Fl_Positioner.H>}
        class Fl_Positioner
      }
      Fl_Box {joy[2]} {
        label {LFO 2 (controls audio modulator amp.)}
        callback {joy_callback(2);}
        xywh {250 25 230 220} box DOWN_BOX color 44 selection_color 1 labelsize 12 align 130 when 3
        code0 {\#include <FL/Fl_Positioner.H>}
        class Fl_Positioner
      }
      Fl_Box {joy[3]} {
        label {LFO 3 (controls audio carrier freq.)}
        callback {joy_callback(3);}
        xywh {5 265 230 220} box DOWN_BOX color 44 selection_color 1 labelsize 12 align 130 when 3
        code0 {\#include <FL/Fl_Positioner.H>}
        class Fl_Positioner
      }
      Fl_Box {joy[4]} {
        label {Audio modulator base amp. and freq.}
        callback {joy_callback(4);}
        xywh {250 265 230 220} box DOWN_BOX color 44 selection_color 1 labelsize 12 align 130 when 3
        code0 {\#include <FL/Fl_Positioner.H>}
        class Fl_Positioner
      }
      Fl_Group {} {
        label {LFO shape} open
        xywh {490 345 155 155} box ENGRAVED_FRAME color 41 labeltype ENGRAVED_LABEL labelsize 16 labelcolor 42 align 21
      } {
        Fl_Round_Button {} {
          label Sine
          callback {LFO_radio_callback(0);}
          xywh {510 365 85 25} type Radio down_box ROUND_DOWN_BOX value 1 labelsize 12 align 148
        }
        Fl_Round_Button {} {
          label Triangle
          callback {LFO_radio_callback(1);}
          xywh {510 380 85 25} type Radio down_box ROUND_DOWN_BOX labelsize 12 align 148
        }
        Fl_Round_Button {} {
          label {Up Ramp}
          callback {LFO_radio_callback(2);}
          xywh {510 395 85 25} type Radio down_box ROUND_DOWN_BOX labelsize 12 align 148
        }
        Fl_Round_Button {} {
          label {Down Ramp}
          callback {LFO_radio_callback(3);}
          xywh {510 410 85 25} type Radio down_box ROUND_DOWN_BOX labelsize 12 align 148
        }
        Fl_Round_Button {} {
          label Square
          callback {LFO_radio_callback(4);}
          xywh {510 425 85 25} type Radio down_box ROUND_DOWN_BOX labelsize 12 align 148
        }
        Fl_Round_Button {} {
          label Random
          callback {LFO_radio_callback(5);}
          xywh {510 440 85 25} type Radio down_box ROUND_DOWN_BOX labelsize 12 align 148
        }
        Fl_Round_Button {} {
          label {Custom set}
          callback {isAudio = false;
customWave();}
          xywh {510 455 85 25} type Radio down_box ROUND_DOWN_BOX labelsize 12 align 148
        }
        Fl_Round_Button {} {
          label {Step Sequencer}
          callback {stepSequencer();}
          xywh {510 470 125 25} type Radio down_box ROUND_DOWN_BOX labelsize 12 align 148
        }
      }
      Fl_Group {} {
        label {Audio modulator shape} open
        xywh {650 345 145 155} box ENGRAVED_FRAME color 41 labeltype ENGRAVED_LABEL labelsize 16 labelcolor 42 align 149
      } {
        Fl_Round_Button {} {
          label Sine
          callback {modulator_radio_callback(0);}
          xywh {665 385 85 20} type Radio down_box ROUND_DOWN_BOX value 1 labelsize 12
        }
        Fl_Round_Button {} {
          label Triangle
          callback {modulator_radio_callback(1);}
          xywh {665 400 85 20} type Radio down_box ROUND_DOWN_BOX labelsize 12
        }
        Fl_Round_Button {} {
          label {Up Ramp}
          callback {modulator_radio_callback(2);}
          xywh {665 415 85 20} type Radio down_box ROUND_DOWN_BOX labelsize 12
        }
        Fl_Round_Button {} {
          label {Down Ramp}
          callback {modulator_radio_callback(3);}
          xywh {665 430 85 20} type Radio down_box ROUND_DOWN_BOX labelsize 12
        }
        Fl_Round_Button {} {
          label Square
          callback {modulator_radio_callback(4);}
          xywh {665 445 85 20} type Radio down_box ROUND_DOWN_BOX labelsize 12
        }
        Fl_Round_Button {} {
          label Random
          callback {modulator_radio_callback(5);}
          xywh {665 460 85 20} type Radio down_box ROUND_DOWN_BOX labelsize 12
        }
        Fl_Round_Button {} {
          label {Custom set}
          callback {isAudio = true;
customWave();}
          xywh {665 475 85 20} type Radio down_box ROUND_DOWN_BOX labelsize 12
        }
      }
      Fl_Slider CarrierFreq {
        label {Audio carrier base freq.}
        callback {carrier_freq_callback();}
        xywh {140 510 650 20} type {Horz Knob} box FLAT_BOX selection_color 176 labelsize 12 labelcolor 0 align 4 value 0.3
      }
      Fl_Box LfoShape {
        xywh {490 5 305 165} box DOWN_BOX color 54
        class Fl_DrawShape
      }
      Fl_Box CarrierShape {
        xywh {490 175 305 165} box DOWN_BOX color 54
        class Fl_DrawShape
      }
    }
  }
  Function {stepSequencer()} {} {
    Fl_Window stepSeqWindow {
      label {Step sequencer} open
      xywh {204 123 425 320} type Double hide resizable
    } {
      Fl_Value_Input numSteps {
        label {Number of active steps}
        callback {stepSequencerCompute();}
        xywh {15 50 80 25} labelsize 12 align 129 when 4 minimum 2 maximum 24 step 1 value 8
      }
      Fl_Button {} {
        label Compute
        callback {stepSequencerCompute();}
        xywh {5 245 105 30}
      }
      Fl_Return_Button {} {
        label Exit
        callback {delete o->parent();}
        xywh {5 280 105 30}
      }
      Fl_Scroll {} {open
        xywh {115 5 302 305} box DOWN_BOX resizable
      } {
        Fl_Box {} {
          xywh {115 125 20 25}
        }
        Fl_Value_Input {stepDur[0]} {
          label dur
          xywh {125 255 30 25} labelsize 11 align 129 minimum 1 maximum 1000 step 0.25 value 1 textsize 11
        }
        Fl_Value_Slider {stepLevel[0]} {
          callback {stepSequencerCompute();}
          xywh {125 10 30 230} type {Vert Knob} box FLAT_BOX selection_color 248 labelsize 12 when 4 minimum 1 maximum 0
        }
        Fl_Value_Input {stepDur[1]} {
          label dur
          xywh {160 255 30 25} labelsize 11 align 129 minimum 1 maximum 1000 step 0.25 value 1 textsize 11
        }
        Fl_Value_Slider {stepLevel[1]} {
          callback {stepSequencerCompute();}
          xywh {160 10 30 230} type {Vert Knob} box FLAT_BOX selection_color 248 labelsize 12 when 4 minimum 1 maximum 0
        }
        Fl_Value_Input {stepDur[2]} {
          label dur
          xywh {195 255 30 25} labelsize 11 align 129 minimum 1 maximum 1000 step 0.25 value 1 textsize 11
        }
        Fl_Value_Slider {stepLevel[2]} {
          callback {stepSequencerCompute();}
          xywh {195 10 30 230} type {Vert Knob} box FLAT_BOX selection_color 248 labelsize 12 when 4 minimum 1 maximum 0
        }
        Fl_Value_Input {stepDur[3]} {
          label dur
          xywh {230 255 30 25} labelsize 11 align 129 minimum 1 maximum 1000 step 0.25 value 1 textsize 11
        }
        Fl_Value_Slider {stepLevel[3]} {
          callback {stepSequencerCompute();}
          xywh {230 10 30 230} type {Vert Knob} box FLAT_BOX selection_color 248 labelsize 12 when 4 minimum 1 maximum 0
        }
        Fl_Value_Input {stepDur[4]} {
          label dur
          xywh {275 255 30 25} labelsize 11 align 129 minimum 1 maximum 1000 step 0.25 value 1 textsize 11
        }
        Fl_Value_Slider {stepLevel[4]} {
          callback {stepSequencerCompute();}
          xywh {275 10 30 230} type {Vert Knob} box FLAT_BOX selection_color 248 labelsize 12 when 4 minimum 1 maximum 0
        }
        Fl_Value_Input {stepDur[5]} {
          label dur
          xywh {310 255 30 25} labelsize 11 align 129 minimum 1 maximum 1000 step 0.25 value 1 textsize 11
        }
        Fl_Value_Slider {stepLevel[5]} {
          callback {stepSequencerCompute();}
          xywh {310 10 30 230} type {Vert Knob} box FLAT_BOX selection_color 248 labelsize 12 when 4 minimum 1 maximum 0
        }
        Fl_Value_Input {stepDur[6]} {
          label dur
          xywh {345 255 30 25} labelsize 11 align 129 minimum 1 maximum 1000 step 0.25 value 1 textsize 11
        }
        Fl_Value_Slider {stepLevel[6]} {
          callback {stepSequencerCompute();}
          xywh {345 10 30 230} type {Vert Knob} box FLAT_BOX selection_color 248 labelsize 12 when 4 minimum 1 maximum 0
        }
        Fl_Value_Input {stepDur[7]} {
          label dur
          xywh {380 255 30 25} labelsize 11 align 129 minimum 1 maximum 1000 step 0.25 value 1 textsize 11
        }
        Fl_Value_Slider {stepLevel[7]} {
          callback {stepSequencerCompute();}
          xywh {380 10 30 230} type {Vert Knob} box FLAT_BOX selection_color 248 labelsize 12 when 4 minimum 1 maximum 0
        }
        Fl_Value_Input {stepDur[8]} {
          label dur
          xywh {430 255 30 25} labelsize 11 align 129 minimum 1 maximum 1000 step 0.25 value 1 textsize 11
        }
        Fl_Value_Slider {stepLevel[8]} {
          callback {stepSequencerCompute();}
          xywh {430 10 30 230} type {Vert Knob} box FLAT_BOX selection_color 248 labelsize 12 when 4 minimum 1 maximum 0
        }
        Fl_Value_Input {stepDur[9]} {
          label dur
          xywh {465 255 30 25} labelsize 11 align 129 minimum 1 maximum 1000 step 0.25 value 1 textsize 11
        }
        Fl_Value_Slider {stepLevel[9]} {
          callback {stepSequencerCompute();}
          xywh {465 10 30 230} type {Vert Knob} box FLAT_BOX selection_color 248 labelsize 12 when 4 minimum 1 maximum 0
        }
        Fl_Value_Input {stepDur[10]} {
          label dur
          xywh {500 255 30 25} labelsize 11 align 129 minimum 1 maximum 1000 step 0.25 value 1 textsize 11
        }
        Fl_Value_Slider {stepLevel[10]} {
          callback {stepSequencerCompute();}
          xywh {500 10 30 230} type {Vert Knob} box FLAT_BOX selection_color 248 labelsize 12 when 4 minimum 1 maximum 0
        }
        Fl_Value_Input {stepDur[11]} {
          label dur
          xywh {535 255 30 25} labelsize 11 align 129 minimum 1 maximum 1000 step 0.25 value 1 textsize 11
        }
        Fl_Value_Slider {stepLevel[11]} {
          callback {stepSequencerCompute();}
          xywh {535 10 30 230} type {Vert Knob} box FLAT_BOX selection_color 248 labelsize 12 when 4 minimum 1 maximum 0
        }
        Fl_Value_Input {stepDur[12]} {
          label dur
          xywh {580 255 30 25} labelsize 11 align 129 minimum 1 maximum 1000 step 0.25 value 1 textsize 11
        }
        Fl_Value_Slider {stepLevel[12]} {
          callback {stepSequencerCompute();}
          xywh {580 10 30 230} type {Vert Knob} box FLAT_BOX selection_color 248 labelsize 12 when 4 minimum 1 maximum 0
        }
        Fl_Value_Input {stepDur[13]} {
          label dur
          xywh {615 255 30 25} labelsize 11 align 129 minimum 1 maximum 1000 step 0.25 value 1 textsize 11
        }
        Fl_Value_Slider {stepLevel[13]} {
          callback {stepSequencerCompute();}
          xywh {615 10 30 230} type {Vert Knob} box FLAT_BOX selection_color 248 labelsize 12 when 4 minimum 1 maximum 0
        }
        Fl_Value_Input {stepDur[14]} {
          label dur
          xywh {650 255 30 25} labelsize 11 align 129 minimum 1 maximum 1000 step 0.25 value 1 textsize 11
        }
        Fl_Value_Slider {stepLevel[14]} {
          callback {stepSequencerCompute();}
          xywh {650 10 30 230} type {Vert Knob} box FLAT_BOX selection_color 248 labelsize 12 when 4 minimum 1 maximum 0
        }
        Fl_Value_Input {stepDur[15]} {
          label dur
          xywh {685 255 30 25} labelsize 11 align 129 minimum 1 maximum 1000 step 0.25 value 1 textsize 11
        }
        Fl_Value_Slider {stepLevel[15]} {
          callback {stepSequencerCompute();}
          xywh {685 10 30 230} type {Vert Knob} box FLAT_BOX selection_color 248 labelsize 12 when 4 minimum 1 maximum 0
        }
        Fl_Value_Input {stepDur[16]} {
          label dur
          xywh {735 255 30 25} labelsize 11 align 129 minimum 1 maximum 1000 step 0.25 value 1 textsize 11
        }
        Fl_Value_Slider {stepLevel[16]} {
          callback {stepSequencerCompute();}
          xywh {735 10 30 230} type {Vert Knob} box FLAT_BOX selection_color 248 labelsize 12 when 4 minimum 1 maximum 0
        }
        Fl_Value_Input {stepDur[17]} {
          label dur
          xywh {770 255 30 25} labelsize 11 align 129 minimum 1 maximum 1000 step 0.25 value 1 textsize 11
        }
        Fl_Value_Slider {stepLevel[17]} {
          callback {stepSequencerCompute();}
          xywh {770 10 30 230} type {Vert Knob} box FLAT_BOX selection_color 248 labelsize 12 when 4 minimum 1 maximum 0
        }
        Fl_Value_Input {stepDur[18]} {
          label dur
          xywh {805 255 30 25} labelsize 11 align 129 minimum 1 maximum 1000 step 0.25 value 1 textsize 11
        }
        Fl_Value_Slider {stepLevel[18]} {
          callback {stepSequencerCompute();}
          xywh {805 10 30 230} type {Vert Knob} box FLAT_BOX selection_color 248 labelsize 12 when 4 minimum 1 maximum 0
        }
        Fl_Value_Input {stepDur[19]} {
          label dur
          xywh {840 255 30 25} labelsize 11 align 129 minimum 1 maximum 1000 step 0.25 value 1 textsize 11
        }
        Fl_Value_Slider {stepLevel[19]} {
          callback {stepSequencerCompute();}
          xywh {840 10 30 230} type {Vert Knob} box FLAT_BOX selection_color 248 labelsize 12 when 4 minimum 1 maximum 0
        }
        Fl_Value_Input {stepDur[20]} {
          label dur
          xywh {885 255 30 25} labelsize 11 align 129 minimum 1 maximum 1000 step 0.25 value 1 textsize 11
        }
        Fl_Value_Slider {stepLevel[20]} {
          callback {stepSequencerCompute();}
          xywh {885 10 30 230} type {Vert Knob} box FLAT_BOX selection_color 248 labelsize 12 when 4 minimum 1 maximum 0
        }
        Fl_Value_Input {stepDur[21]} {
          label dur
          xywh {920 255 30 25} labelsize 11 align 129 minimum 1 maximum 1000 step 0.25 value 1 textsize 11
        }
        Fl_Value_Slider {stepLevel[21]} {
          callback {stepSequencerCompute();}
          xywh {920 10 30 230} type {Vert Knob} box FLAT_BOX selection_color 248 labelsize 12 when 4 minimum 1 maximum 0
        }
        Fl_Value_Input {stepDur[22]} {
          label dur
          xywh {955 255 30 25} labelsize 11 align 129 minimum 1 maximum 1000 step 0.25 value 1 textsize 11
        }
        Fl_Value_Slider {stepLevel[22]} {
          callback {stepSequencerCompute();}
          xywh {955 10 30 230} type {Vert Knob} box FLAT_BOX selection_color 248 labelsize 12 when 4 minimum 1 maximum 0
        }
        Fl_Value_Input {stepDur[23]} {
          label dur
          xywh {990 255 30 25} labelsize 11 align 129 minimum 1 maximum 1000 step 0.25 value 1 textsize 11
        }
        Fl_Value_Slider {stepLevel[23]} {
          callback {stepSequencerCompute();}
          xywh {990 10 30 230} type {Vert Knob} box FLAT_BOX selection_color 248 labelsize 12 when 4 minimum 1 maximum 0
        }
      }
    }
    code {stepSeqWindow->show();} {}
  }
  Function {customWave()} {open return_type void
  } {
    Fl_Window customWavWindow {
      label {Custom set waveform} open
      xywh {162 173 358 313} type Double visible
    } {
      Fl_Value_Input {numHarm[0]} {
        label harm
        xywh {145 265 30 25} labelsize 12 align 130 minimum 1 maximum 1000 step 0.5 value 1
      }
      Fl_Value_Slider {levelHarm[0]} {
        callback {customWave_callback(isAudio);} selected
        xywh {145 5 30 250} type {Vert Knob} box FLAT_BOX selection_color 216 labelsize 12 when 4 minimum 1 maximum 0
      }
      Fl_Value_Input {numHarm[1]} {
        label harm
        xywh {180 265 30 25} labelsize 12 align 130 minimum 1 maximum 1000 step 0.5 value 2
      }
      Fl_Value_Slider {levelHarm[1]} {
        callback {customWave_callback(isAudio);}
        xywh {180 5 30 250} type {Vert Knob} box FLAT_BOX selection_color 216 labelsize 12 when 4 minimum 1 maximum 0
      }
      Fl_Value_Input {numHarm[2]} {
        label harm
        xywh {215 265 30 25} labelsize 12 align 130 minimum 1 maximum 1000 step 0.5 value 3
      }
      Fl_Value_Slider {levelHarm[2]} {
        callback {customWave_callback(isAudio);}
        xywh {215 5 30 250} type {Vert Knob} box FLAT_BOX selection_color 216 labelsize 12 when 4 minimum 1 maximum 0
      }
      Fl_Value_Input {numHarm[3]} {
        label harm
        xywh {250 265 30 25} labelsize 12 align 130 minimum 1 maximum 1000 step 0.5 value 4
      }
      Fl_Value_Slider {levelHarm[3]} {
        callback {customWave_callback(isAudio);}
        xywh {250 5 30 250} type {Vert Knob} box FLAT_BOX selection_color 216 labelsize 12 when 4 minimum 1 maximum 0
      }
      Fl_Value_Input {numHarm[4]} {
        label harm
        xywh {285 265 30 25} labelsize 12 align 130 minimum 1 maximum 1000 step 0.5 value 5
      }
      Fl_Value_Slider {levelHarm[4]} {
        callback {customWave_callback(isAudio);}
        xywh {285 5 30 250} type {Vert Knob} box FLAT_BOX selection_color 216 labelsize 12 when 4 minimum 1 maximum 0
      }
      Fl_Value_Input {numHarm[5]} {
        label harm
        xywh {320 265 30 25} labelsize 12 align 130 minimum 1 maximum 1000 step 0.5 value 6
      }
      Fl_Value_Slider {levelHarm[5]} {
        callback {customWave_callback(isAudio);}
        xywh {320 5 30 250} type {Vert Knob} box FLAT_BOX selection_color 216 labelsize 12 when 4 minimum 1 maximum 0
      }
      Fl_Button {} {
        label Compute
        callback {customWave_callback(isAudio);}
        xywh {10 280 70 25}
      }
      Fl_Return_Button {} {
        label Exit
        callback {delete o->parent();}
        xywh {85 280 50 25}
      }
      Fl_Box {} {
        label {Build your custom wave with a sum of partials having various base shapes. You can redefine the order number and amplitude of each partial, having the shapes listed above}
        xywh {5 170 130 100} labelsize 11 labelcolor 176 align 148
      }
      Fl_Group {} {
        label {Select the base shape, please} open
        xywh {5 5 135 160} box ENGRAVED_FRAME color 41 labeltype ENGRAVED_LABEL labelcolor 42 align 149
      } {
        Fl_Round_Button radioSine {
          label Sine
          xywh {15 40 85 25} type Radio down_box ROUND_DOWN_BOX value 1
        }
        Fl_Round_Button radioTriangle {
          label Triangle
          xywh {15 60 85 25} type Radio down_box ROUND_DOWN_BOX
        }
        Fl_Round_Button radioUpRamp {
          label {Up Ramp}
          xywh {15 80 85 25} type Radio down_box ROUND_DOWN_BOX
        }
        Fl_Round_Button radioDownRamp {
          label {Down Ramp}
          xywh {15 100 85 25} type Radio down_box ROUND_DOWN_BOX
        }
        Fl_Round_Button radioSquare {
          label Square
          xywh {15 120 85 25} type Radio down_box ROUND_DOWN_BOX
        }
        Fl_Round_Button radioLastWave {
          label {Last Waveform}
          xywh {15 140 85 25} type Radio down_box ROUND_DOWN_BOX
        }
      }
    }
    code {customWavWindow->show();} {}
  }
  Function {show()} {} {
    code {mainWindow->show();} {}
  }
  Function {bye()} {return_type void
  } {
    code {mainWindow->hide();} {}
  }
  Function {joy_callback(int i)} {return_type {virtual void}
  } {}
  Function {LFO_radio_callback(int i)} {return_type {virtual void}
  } {}
  Function {modulator_radio_callback(int i)} {return_type {virtual void}
  } {}
  Function {carrier_freq_callback()} {return_type {virtual void}
  } {}
  Function {customWave_callback(bool isCarr)} {return_type {virtual void}
  } {}
  Function {stepSequencerCompute()} {return_type {virtual void}
  } {}
} 
