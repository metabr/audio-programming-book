// generated by Fast Light User Interface Designer (fluid) version 1.0104

#ifndef LFO3gui_h
#define LFO3gui_h
#include <FL/Fl.H>
#include "PortAudioStuff.h"
#include <FL/Fl_Box.H>
class Fl_DrawShape;
extern void drawWaveform(Fl_DrawShape*);

class Fl_DrawShape : public Fl_Box {
public:
  Fl_DrawShape(int X, int Y, int W, int H, const char *l=0) ;
  float *table;
  long tablen;
  void draw();
};
#include <FL/Fl_Window.H>
#include <FL/Fl_Positioner.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Round_Button.H>
#include <FL/Fl_Slider.H>
#include <FL/Fl_Value_Input.H>
#include <FL/Fl_Value_Slider.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Return_Button.H>
#include <FL/Fl_Box.H>

class LFO3gui : public PAstuff {
  bool isCarrier;
public:
  LFO3gui();
  Fl_Window *mainWindow;
  Fl_Positioner *joy;
private:
  inline void cb_joy_i(Fl_Positioner*, void*);
  static void cb_joy(Fl_Positioner*, void*);
  inline void cb_Sine_i(Fl_Round_Button*, void*);
  static void cb_Sine(Fl_Round_Button*, void*);
  inline void cb_Triangle_i(Fl_Round_Button*, void*);
  static void cb_Triangle(Fl_Round_Button*, void*);
  inline void cb_Up_i(Fl_Round_Button*, void*);
  static void cb_Up(Fl_Round_Button*, void*);
  inline void cb_Down_i(Fl_Round_Button*, void*);
  static void cb_Down(Fl_Round_Button*, void*);
  inline void cb_Square_i(Fl_Round_Button*, void*);
  static void cb_Square(Fl_Round_Button*, void*);
  inline void cb_Random_i(Fl_Round_Button*, void*);
  static void cb_Random(Fl_Round_Button*, void*);
  inline void cb_Custom_i(Fl_Round_Button*, void*);
  static void cb_Custom(Fl_Round_Button*, void*);
  inline void cb_Sine1_i(Fl_Round_Button*, void*);
  static void cb_Sine1(Fl_Round_Button*, void*);
  inline void cb_Triangle1_i(Fl_Round_Button*, void*);
  static void cb_Triangle1(Fl_Round_Button*, void*);
  inline void cb_Up1_i(Fl_Round_Button*, void*);
  static void cb_Up1(Fl_Round_Button*, void*);
  inline void cb_Down1_i(Fl_Round_Button*, void*);
  static void cb_Down1(Fl_Round_Button*, void*);
  inline void cb_Square1_i(Fl_Round_Button*, void*);
  static void cb_Square1(Fl_Round_Button*, void*);
  inline void cb_Random1_i(Fl_Round_Button*, void*);
  static void cb_Random1(Fl_Round_Button*, void*);
  inline void cb_Custom1_i(Fl_Round_Button*, void*);
  static void cb_Custom1(Fl_Round_Button*, void*);
public:
  Fl_Slider *CarrierFreq;
private:
  inline void cb_CarrierFreq_i(Fl_Slider*, void*);
  static void cb_CarrierFreq(Fl_Slider*, void*);
public:
  Fl_DrawShape *LfoShape;
  Fl_DrawShape *CarrierShape;
  void customWave();
  Fl_Window *customWavWindow;
private:
  inline void cb_levelHarm_i(Fl_Value_Slider*, void*);
  static void cb_levelHarm(Fl_Value_Slider*, void*);
  inline void cb_levelHarm1_i(Fl_Value_Slider*, void*);
  static void cb_levelHarm1(Fl_Value_Slider*, void*);
  inline void cb_levelHarm2_i(Fl_Value_Slider*, void*);
  static void cb_levelHarm2(Fl_Value_Slider*, void*);
  inline void cb_levelHarm3_i(Fl_Value_Slider*, void*);
  static void cb_levelHarm3(Fl_Value_Slider*, void*);
  inline void cb_levelHarm4_i(Fl_Value_Slider*, void*);
  static void cb_levelHarm4(Fl_Value_Slider*, void*);
public:
  Fl_Value_Input *numHarm[6];
  Fl_Value_Slider *levelHarm[6];
private:
  inline void cb_levelHarm5_i(Fl_Value_Slider*, void*);
  static void cb_levelHarm5(Fl_Value_Slider*, void*);
  inline void cb_Compute_i(Fl_Button*, void*);
  static void cb_Compute(Fl_Button*, void*);
  inline void cb_Exit_i(Fl_Return_Button*, void*);
  static void cb_Exit(Fl_Return_Button*, void*);
public:
  void show();
  void bye();
  virtual void joy_callback();
  virtual void LFO_radio_callback(int i);
  virtual void carrier_radio_callback(int i);
  virtual void carrier_freq_callback();
  virtual void customWave_callback(bool isCarr);
};
#endif
