// generated by Fast Light User Interface Designer (fluid) version 1.0107

#ifndef PortAudioGUI_h
#define PortAudioGUI_h
#include <FL/Fl.H>
#include <cstdio>
#include "portaudio.h"
extern void bye();
#include <FL/Fl_Menu_Bar.H>
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Browser.H>
#include <FL/Fl_Return_Button.H>

class PortAudioGUI {
public:
  bool isInput;
  int inDevNum;
  int outDevNum;
  PortAudioGUI();
  ~PortAudioGUI();
  void make_menu();
  Fl_Group *AudioMenuBar;
  static Fl_Menu_Item menu_[];
  static Fl_Menu_Item *mnuChooseInput;
private:
  void cb_mnuChooseInput_i(Fl_Menu_*, void*);
  static void cb_mnuChooseInput(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *mnuChooseOutput;
private:
  void cb_mnuChooseOutput_i(Fl_Menu_*, void*);
  static void cb_mnuChooseOutput(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menuStart;
private:
  void cb_menuStart_i(Fl_Menu_*, void*);
  static void cb_menuStart(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menuStop;
private:
  void cb_menuStop_i(Fl_Menu_*, void*);
  static void cb_menuStop(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menuExit;
private:
  void cb_menuExit_i(Fl_Menu_*, void*);
  static void cb_menuExit(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *inDevMenu;
  static Fl_Menu_Item *outDevMenu;
  void chooseDevice();
  Fl_Double_Window *chooseDev;
  Fl_Browser *brwDevSelect;
private:
  void cb_brwDevSelect_i(Fl_Browser*, void*);
  static void cb_brwDevSelect(Fl_Browser*, void*);
  void cb_OK_i(Fl_Return_Button*, void*);
  static void cb_OK(Fl_Return_Button*, void*);
public:
  virtual void getAvailableInputs();
  virtual void getAvailableOutputs();
  virtual void selectDevice(int i, int data, const char *text);
  virtual void openInput();
  virtual void openOutput();
  virtual void play();
  virtual void stop();
  virtual void bye();
};
#endif
