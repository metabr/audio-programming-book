// generated by Fast Light User Interface Designer (fluid) version 1.0104

#include "LFO6gui.h"
void drawWaveform(Fl_DrawShape*);

Fl_DrawShape::Fl_DrawShape(int X, int Y, int W, int H, const char *l) : Fl_Box(X,Y,W,H,l) {
}

void Fl_DrawShape::draw() {
  Fl_Box::draw();
drawWaveform(this);
}

inline void LFO6gui::cb_joy_i(Fl_Positioner*, void*) {
  joy_callback(1);
}
void LFO6gui::cb_joy(Fl_Positioner* o, void* v) {
  ((LFO6gui*)(o->parent()->user_data()))->cb_joy_i(o,v);
}

inline void LFO6gui::cb_joy1_i(Fl_Positioner*, void*) {
  joy_callback(2);
}
void LFO6gui::cb_joy1(Fl_Positioner* o, void* v) {
  ((LFO6gui*)(o->parent()->user_data()))->cb_joy1_i(o,v);
}

inline void LFO6gui::cb_joy2_i(Fl_Positioner*, void*) {
  joy_callback(3);
}
void LFO6gui::cb_joy2(Fl_Positioner* o, void* v) {
  ((LFO6gui*)(o->parent()->user_data()))->cb_joy2_i(o,v);
}

inline void LFO6gui::cb_joy3_i(Fl_Positioner*, void*) {
  joy_callback(4);
}
void LFO6gui::cb_joy3(Fl_Positioner* o, void* v) {
  ((LFO6gui*)(o->parent()->user_data()))->cb_joy3_i(o,v);
}

inline void LFO6gui::cb_CarrierFreq_i(Fl_Slider*, void*) {
  carrier_freq_callback();
}
void LFO6gui::cb_CarrierFreq(Fl_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->user_data()))->cb_CarrierFreq_i(o,v);
}

inline void LFO6gui::cb_chTable_i(Fl_Choice* o, void*) {
  tableShape_callback(o,0);
}
void LFO6gui::cb_chTable(Fl_Choice* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_chTable_i(o,v);
}

Fl_Menu_Item LFO6gui::menu_chTable[] = {
 {"Sine", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Triangle", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Up Ramp", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Down Ramp", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Square", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Random", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Custom set", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Step sequencer", 0,  0, 0, 0, 0, 0, 12, 56},
 {"ADSR", 0,  0, 0, 0, 0, 0, 12, 56},
 {0}
};

inline void LFO6gui::cb_chTable1_i(Fl_Choice* o, void*) {
  tableShape_callback(o,1);
}
void LFO6gui::cb_chTable1(Fl_Choice* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_chTable1_i(o,v);
}

Fl_Menu_Item LFO6gui::menu_chTable1[] = {
 {"Sine", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Triangle", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Up Ramp", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Down Ramp", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Square", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Random", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Custom set", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Step sequencer", 0,  0, 0, 0, 0, 0, 12, 56},
 {"ADSR", 0,  0, 0, 0, 0, 0, 12, 56},
 {0}
};

inline void LFO6gui::cb_chTable2_i(Fl_Choice* o, void*) {
  tableShape_callback(o,2);
}
void LFO6gui::cb_chTable2(Fl_Choice* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_chTable2_i(o,v);
}

Fl_Menu_Item LFO6gui::menu_chTable2[] = {
 {"Sine", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Triangle", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Up Ramp", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Down Ramp", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Square", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Random", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Custom set", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Step sequencer", 0,  0, 0, 0, 0, 0, 12, 56},
 {"ADSR", 0,  0, 0, 0, 0, 0, 12, 56},
 {0}
};

inline void LFO6gui::cb_chTable3_i(Fl_Choice* o, void*) {
  tableShape_callback(o,3);
}
void LFO6gui::cb_chTable3(Fl_Choice* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_chTable3_i(o,v);
}

Fl_Menu_Item LFO6gui::menu_chTable3[] = {
 {"Sine", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Triangle", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Up Ramp", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Down Ramp", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Square", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Random", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Custom set", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Step sequencer", 0,  0, 0, 0, 0, 0, 12, 56},
 {"ADSR", 0,  0, 0, 0, 0, 0, 12, 56},
 {0}
};

inline void LFO6gui::cb_chOscShape_i(Fl_Choice* o, void*) {
  oscTable_callback(o,0);
}
void LFO6gui::cb_chOscShape(Fl_Choice* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_chOscShape_i(o,v);
}

Fl_Menu_Item LFO6gui::menu_chOscShape[] = {
 {"Table1", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Table2", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Table3", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Table4", 0,  0, 0, 0, 0, 0, 12, 56},
 {0}
};

inline void LFO6gui::cb_chOscShape1_i(Fl_Choice* o, void*) {
  oscTable_callback(o,1);
}
void LFO6gui::cb_chOscShape1(Fl_Choice* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_chOscShape1_i(o,v);
}

Fl_Menu_Item LFO6gui::menu_chOscShape1[] = {
 {"Table1", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Table2", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Table3", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Table4", 0,  0, 0, 0, 0, 0, 12, 56},
 {0}
};

inline void LFO6gui::cb_chOscShape2_i(Fl_Choice* o, void*) {
  oscTable_callback(o,2);
}
void LFO6gui::cb_chOscShape2(Fl_Choice* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_chOscShape2_i(o,v);
}

Fl_Menu_Item LFO6gui::menu_chOscShape2[] = {
 {"Table1", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Table2", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Table3", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Table4", 0,  0, 0, 0, 0, 0, 12, 56},
 {0}
};

inline void LFO6gui::cb_chOscShape3_i(Fl_Choice* o, void*) {
  oscTable_callback(o,4);
}
void LFO6gui::cb_chOscShape3(Fl_Choice* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_chOscShape3_i(o,v);
}

Fl_Menu_Item LFO6gui::menu_chOscShape3[] = {
 {"Table1", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Table2", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Table3", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Table4", 0,  0, 0, 0, 0, 0, 12, 56},
 {0}
};

inline void LFO6gui::cb_chOscShape4_i(Fl_Choice* o, void*) {
  oscTable_callback(o,5);
}
void LFO6gui::cb_chOscShape4(Fl_Choice* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_chOscShape4_i(o,v);
}

Fl_Menu_Item LFO6gui::menu_chOscShape4[] = {
 {"Table1", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Table2", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Table3", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Table4", 0,  0, 0, 0, 0, 0, 12, 56},
 {0}
};

inline void LFO6gui::cb_chOscShape5_i(Fl_Choice* o, void*) {
  oscTable_callback(o,3);
}
void LFO6gui::cb_chOscShape5(Fl_Choice* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_chOscShape5_i(o,v);
}

Fl_Menu_Item LFO6gui::menu_chOscShape5[] = {
 {"Table1", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Table2", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Table3", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Table4", 0,  0, 0, 0, 0, 0, 12, 56},
 {0}
};

inline void LFO6gui::cb_LFO4freq_i(Fl_Slider*, void*) {
  lfo4_freq_callback();
}
void LFO6gui::cb_LFO4freq(Fl_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->user_data()))->cb_LFO4freq_i(o,v);
}

inline void LFO6gui::cb_levelHarm_i(Fl_Value_Slider*, void*) {
  customWave_callback(tableIndex[0]);
}
void LFO6gui::cb_levelHarm(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->user_data()))->cb_levelHarm_i(o,v);
}

inline void LFO6gui::cb_levelHarm1_i(Fl_Value_Slider*, void*) {
  customWave_callback(tableIndex[0]);
}
void LFO6gui::cb_levelHarm1(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->user_data()))->cb_levelHarm1_i(o,v);
}

inline void LFO6gui::cb_levelHarm2_i(Fl_Value_Slider*, void*) {
  customWave_callback(tableIndex[0]);
}
void LFO6gui::cb_levelHarm2(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->user_data()))->cb_levelHarm2_i(o,v);
}

inline void LFO6gui::cb_levelHarm3_i(Fl_Value_Slider*, void*) {
  customWave_callback(tableIndex[0]);
}
void LFO6gui::cb_levelHarm3(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->user_data()))->cb_levelHarm3_i(o,v);
}

inline void LFO6gui::cb_levelHarm4_i(Fl_Value_Slider*, void*) {
  customWave_callback(tableIndex[0]);
}
void LFO6gui::cb_levelHarm4(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->user_data()))->cb_levelHarm4_i(o,v);
}

inline void LFO6gui::cb_levelHarm5_i(Fl_Value_Slider*, void*) {
  customWave_callback(tableIndex[0]);
}
void LFO6gui::cb_levelHarm5(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->user_data()))->cb_levelHarm5_i(o,v);
}

inline void LFO6gui::cb_Compute_i(Fl_Button*, void*) {
  customWave_callback(tableIndex[0]);
}
void LFO6gui::cb_Compute(Fl_Button* o, void* v) {
  ((LFO6gui*)(o->parent()->user_data()))->cb_Compute_i(o,v);
}

inline void LFO6gui::cb_Exit_i(Fl_Return_Button* o, void*) {
  delete o->parent();
}
void LFO6gui::cb_Exit(Fl_Return_Button* o, void* v) {
  ((LFO6gui*)(o->parent()->user_data()))->cb_Exit_i(o,v);
}

inline void LFO6gui::cb_chPartial_i(Fl_Choice*, void*) {
  customWave_callback(tableIndex[0]);
}
void LFO6gui::cb_chPartial(Fl_Choice* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_chPartial_i(o,v);
}

Fl_Menu_Item LFO6gui::menu_chPartial[] = {
 {"Sine", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Triangle", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Up Ramp", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Down Ramp", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Square", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Last waveform", 0,  0, 0, 0, 0, 0, 12, 56},
 {0}
};

inline void LFO6gui::cb_chPartial1_i(Fl_Choice*, void*) {
  customWave_callback(tableIndex[0]);
}
void LFO6gui::cb_chPartial1(Fl_Choice* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_chPartial1_i(o,v);
}

Fl_Menu_Item LFO6gui::menu_chPartial1[] = {
 {"Sine", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Triangle", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Up Ramp", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Down Ramp", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Square", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Last waveform", 0,  0, 0, 0, 0, 0, 12, 56},
 {0}
};

inline void LFO6gui::cb_chPartial2_i(Fl_Choice*, void*) {
  customWave_callback(tableIndex[0]);
}
void LFO6gui::cb_chPartial2(Fl_Choice* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_chPartial2_i(o,v);
}

Fl_Menu_Item LFO6gui::menu_chPartial2[] = {
 {"Sine", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Triangle", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Up Ramp", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Down Ramp", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Square", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Last waveform", 0,  0, 0, 0, 0, 0, 12, 56},
 {0}
};

inline void LFO6gui::cb_chPartial3_i(Fl_Choice*, void*) {
  customWave_callback(tableIndex[0]);
}
void LFO6gui::cb_chPartial3(Fl_Choice* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_chPartial3_i(o,v);
}

Fl_Menu_Item LFO6gui::menu_chPartial3[] = {
 {"Sine", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Triangle", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Up Ramp", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Down Ramp", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Square", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Last waveform", 0,  0, 0, 0, 0, 0, 12, 56},
 {0}
};

inline void LFO6gui::cb_chPartial4_i(Fl_Choice*, void*) {
  customWave_callback(tableIndex[0]);
}
void LFO6gui::cb_chPartial4(Fl_Choice* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_chPartial4_i(o,v);
}

Fl_Menu_Item LFO6gui::menu_chPartial4[] = {
 {"Sine", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Triangle", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Up Ramp", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Down Ramp", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Square", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Last waveform", 0,  0, 0, 0, 0, 0, 12, 56},
 {0}
};

inline void LFO6gui::cb_chPartial5_i(Fl_Choice*, void*) {
  customWave_callback(tableIndex[0]);
}
void LFO6gui::cb_chPartial5(Fl_Choice* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_chPartial5_i(o,v);
}

Fl_Menu_Item LFO6gui::menu_chPartial5[] = {
 {"Sine", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Triangle", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Up Ramp", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Down Ramp", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Square", 0,  0, 0, 0, 0, 0, 12, 56},
 {"Last waveform", 0,  0, 0, 0, 0, 0, 12, 56},
 {0}
};

inline void LFO6gui::cb_phsHarm_i(Fl_Value_Input*, void*) {
  customWave_callback(tableIndex[0]);
}
void LFO6gui::cb_phsHarm(Fl_Value_Input* o, void* v) {
  ((LFO6gui*)(o->parent()->user_data()))->cb_phsHarm_i(o,v);
}

inline void LFO6gui::cb_phsHarm1_i(Fl_Value_Input*, void*) {
  customWave_callback(tableIndex[0]);
}
void LFO6gui::cb_phsHarm1(Fl_Value_Input* o, void* v) {
  ((LFO6gui*)(o->parent()->user_data()))->cb_phsHarm1_i(o,v);
}

inline void LFO6gui::cb_phsHarm2_i(Fl_Value_Input*, void*) {
  customWave_callback(tableIndex[0]);
}
void LFO6gui::cb_phsHarm2(Fl_Value_Input* o, void* v) {
  ((LFO6gui*)(o->parent()->user_data()))->cb_phsHarm2_i(o,v);
}

inline void LFO6gui::cb_phsHarm3_i(Fl_Value_Input*, void*) {
  customWave_callback(tableIndex[0]);
}
void LFO6gui::cb_phsHarm3(Fl_Value_Input* o, void* v) {
  ((LFO6gui*)(o->parent()->user_data()))->cb_phsHarm3_i(o,v);
}

inline void LFO6gui::cb_phsHarm4_i(Fl_Value_Input*, void*) {
  customWave_callback(tableIndex[0]);
}
void LFO6gui::cb_phsHarm4(Fl_Value_Input* o, void* v) {
  ((LFO6gui*)(o->parent()->user_data()))->cb_phsHarm4_i(o,v);
}

inline void LFO6gui::cb_phsHarm5_i(Fl_Value_Input*, void*) {
  customWave_callback(tableIndex[0]);
}
void LFO6gui::cb_phsHarm5(Fl_Value_Input* o, void* v) {
  ((LFO6gui*)(o->parent()->user_data()))->cb_phsHarm5_i(o,v);
}

inline void LFO6gui::cb_numSteps_i(Fl_Value_Input*, void*) {
  stepSequencerCompute(tableIndex[1]);
}
void LFO6gui::cb_numSteps(Fl_Value_Input* o, void* v) {
  ((LFO6gui*)(o->parent()->user_data()))->cb_numSteps_i(o,v);
}

inline void LFO6gui::cb_Compute1_i(Fl_Button*, void*) {
  stepSequencerCompute(tableIndex[1]);
}
void LFO6gui::cb_Compute1(Fl_Button* o, void* v) {
  ((LFO6gui*)(o->parent()->user_data()))->cb_Compute1_i(o,v);
}

inline void LFO6gui::cb_Exit1_i(Fl_Return_Button* o, void*) {
  delete o->parent();
}
void LFO6gui::cb_Exit1(Fl_Return_Button* o, void* v) {
  ((LFO6gui*)(o->parent()->user_data()))->cb_Exit1_i(o,v);
}

inline void LFO6gui::cb_stepLevel_i(Fl_Value_Slider*, void*) {
  stepSequencerCompute(tableIndex[1]);
}
void LFO6gui::cb_stepLevel(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_stepLevel_i(o,v);
}

inline void LFO6gui::cb_stepLevel1_i(Fl_Value_Slider*, void*) {
  stepSequencerCompute(tableIndex[1]);
}
void LFO6gui::cb_stepLevel1(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_stepLevel1_i(o,v);
}

inline void LFO6gui::cb_stepLevel2_i(Fl_Value_Slider*, void*) {
  stepSequencerCompute(tableIndex[1]);
}
void LFO6gui::cb_stepLevel2(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_stepLevel2_i(o,v);
}

inline void LFO6gui::cb_stepLevel3_i(Fl_Value_Slider*, void*) {
  stepSequencerCompute(tableIndex[1]);
}
void LFO6gui::cb_stepLevel3(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_stepLevel3_i(o,v);
}

inline void LFO6gui::cb_stepLevel4_i(Fl_Value_Slider*, void*) {
  stepSequencerCompute(tableIndex[1]);
}
void LFO6gui::cb_stepLevel4(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_stepLevel4_i(o,v);
}

inline void LFO6gui::cb_stepLevel5_i(Fl_Value_Slider*, void*) {
  stepSequencerCompute(tableIndex[1]);
}
void LFO6gui::cb_stepLevel5(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_stepLevel5_i(o,v);
}

inline void LFO6gui::cb_stepLevel6_i(Fl_Value_Slider*, void*) {
  stepSequencerCompute(tableIndex[1]);
}
void LFO6gui::cb_stepLevel6(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_stepLevel6_i(o,v);
}

inline void LFO6gui::cb_stepLevel7_i(Fl_Value_Slider*, void*) {
  stepSequencerCompute(tableIndex[1]);
}
void LFO6gui::cb_stepLevel7(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_stepLevel7_i(o,v);
}

inline void LFO6gui::cb_stepLevel8_i(Fl_Value_Slider*, void*) {
  stepSequencerCompute(tableIndex[1]);
}
void LFO6gui::cb_stepLevel8(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_stepLevel8_i(o,v);
}

inline void LFO6gui::cb_stepLevel9_i(Fl_Value_Slider*, void*) {
  stepSequencerCompute(tableIndex[1]);
}
void LFO6gui::cb_stepLevel9(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_stepLevel9_i(o,v);
}

inline void LFO6gui::cb_stepLevela_i(Fl_Value_Slider*, void*) {
  stepSequencerCompute(tableIndex[1]);
}
void LFO6gui::cb_stepLevela(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_stepLevela_i(o,v);
}

inline void LFO6gui::cb_stepLevelb_i(Fl_Value_Slider*, void*) {
  stepSequencerCompute(tableIndex[1]);
}
void LFO6gui::cb_stepLevelb(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_stepLevelb_i(o,v);
}

inline void LFO6gui::cb_stepLevelc_i(Fl_Value_Slider*, void*) {
  stepSequencerCompute(tableIndex[1]);
}
void LFO6gui::cb_stepLevelc(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_stepLevelc_i(o,v);
}

inline void LFO6gui::cb_stepLeveld_i(Fl_Value_Slider*, void*) {
  stepSequencerCompute(tableIndex[1]);
}
void LFO6gui::cb_stepLeveld(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_stepLeveld_i(o,v);
}

inline void LFO6gui::cb_stepLevele_i(Fl_Value_Slider*, void*) {
  stepSequencerCompute(tableIndex[1]);
}
void LFO6gui::cb_stepLevele(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_stepLevele_i(o,v);
}

inline void LFO6gui::cb_stepLevelf_i(Fl_Value_Slider*, void*) {
  stepSequencerCompute(tableIndex[1]);
}
void LFO6gui::cb_stepLevelf(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_stepLevelf_i(o,v);
}

inline void LFO6gui::cb_stepLevel10_i(Fl_Value_Slider*, void*) {
  stepSequencerCompute(tableIndex[1]);
}
void LFO6gui::cb_stepLevel10(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_stepLevel10_i(o,v);
}

inline void LFO6gui::cb_stepLevel11_i(Fl_Value_Slider*, void*) {
  stepSequencerCompute(tableIndex[1]);
}
void LFO6gui::cb_stepLevel11(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_stepLevel11_i(o,v);
}

inline void LFO6gui::cb_stepLevel12_i(Fl_Value_Slider*, void*) {
  stepSequencerCompute(tableIndex[1]);
}
void LFO6gui::cb_stepLevel12(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_stepLevel12_i(o,v);
}

inline void LFO6gui::cb_stepLevel13_i(Fl_Value_Slider*, void*) {
  stepSequencerCompute(tableIndex[1]);
}
void LFO6gui::cb_stepLevel13(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_stepLevel13_i(o,v);
}

inline void LFO6gui::cb_stepLevel14_i(Fl_Value_Slider*, void*) {
  stepSequencerCompute(tableIndex[1]);
}
void LFO6gui::cb_stepLevel14(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_stepLevel14_i(o,v);
}

inline void LFO6gui::cb_stepLevel15_i(Fl_Value_Slider*, void*) {
  stepSequencerCompute(tableIndex[1]);
}
void LFO6gui::cb_stepLevel15(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_stepLevel15_i(o,v);
}

inline void LFO6gui::cb_stepLevel16_i(Fl_Value_Slider*, void*) {
  stepSequencerCompute(tableIndex[1]);
}
void LFO6gui::cb_stepLevel16(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_stepLevel16_i(o,v);
}

inline void LFO6gui::cb_stepLevel17_i(Fl_Value_Slider*, void*) {
  stepSequencerCompute(tableIndex[1]);
}
void LFO6gui::cb_stepLevel17(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->parent()->user_data()))->cb_stepLevel17_i(o,v);
}

inline void LFO6gui::cb_sldAttak_i(Fl_Value_Slider*, void*) {
  adsrCompute(tableIndex[2]);
}
void LFO6gui::cb_sldAttak(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->user_data()))->cb_sldAttak_i(o,v);
}

inline void LFO6gui::cb_sldDecay_i(Fl_Value_Slider*, void*) {
  adsrCompute(tableIndex[2]);
}
void LFO6gui::cb_sldDecay(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->user_data()))->cb_sldDecay_i(o,v);
}

inline void LFO6gui::cb_sldSustain_i(Fl_Value_Slider*, void*) {
  adsrCompute(tableIndex[2]);
}
void LFO6gui::cb_sldSustain(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->user_data()))->cb_sldSustain_i(o,v);
}

inline void LFO6gui::cb_sldRelease_i(Fl_Value_Slider*, void*) {
  adsrCompute(tableIndex[2]);
}
void LFO6gui::cb_sldRelease(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->user_data()))->cb_sldRelease_i(o,v);
}

inline void LFO6gui::cb_sldSustDur_i(Fl_Value_Slider*, void*) {
  adsrCompute(tableIndex[2]);
}
void LFO6gui::cb_sldSustDur(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->user_data()))->cb_sldSustDur_i(o,v);
}

inline void LFO6gui::cb_sldPauseDur_i(Fl_Value_Slider*, void*) {
  adsrCompute(tableIndex[2]);
}
void LFO6gui::cb_sldPauseDur(Fl_Value_Slider* o, void* v) {
  ((LFO6gui*)(o->parent()->user_data()))->cb_sldPauseDur_i(o,v);
}

inline void LFO6gui::cb_Exit2_i(Fl_Return_Button* o, void*) {
  delete o->parent();
}
void LFO6gui::cb_Exit2(Fl_Return_Button* o, void* v) {
  ((LFO6gui*)(o->parent()->user_data()))->cb_Exit2_i(o,v);
}

LFO6gui::LFO6gui():PAstuff() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = mainWindow = new Fl_Double_Window(812, 659, "Example of multiple LFOs with assignable tables");
    w = o;
    o->labelsize(12);
    o->user_data((void*)(this));
    o->align(FL_ALIGN_CENTER);
    { Fl_Positioner* o = joy[1] = new Fl_Positioner(5, 25, 230, 220, "LFO 1 (controls audio modulator freq.)");
      o->box(FL_DOWN_BOX);
      o->color((Fl_Color)44);
      o->selection_color((Fl_Color)1);
      o->labeltype(FL_NORMAL_LABEL);
      o->labelfont(0);
      o->labelsize(12);
      o->labelcolor(FL_BLACK);
      o->callback((Fl_Callback*)cb_joy);
      o->align(130);
      o->when(3);
    }
    { Fl_Positioner* o = joy[2] = new Fl_Positioner(250, 25, 230, 220, "LFO 2 (controls audio modulator amp.)");
      o->box(FL_DOWN_BOX);
      o->color((Fl_Color)44);
      o->selection_color((Fl_Color)1);
      o->labeltype(FL_NORMAL_LABEL);
      o->labelfont(0);
      o->labelsize(12);
      o->labelcolor(FL_BLACK);
      o->callback((Fl_Callback*)cb_joy1);
      o->align(130);
      o->when(3);
    }
    { Fl_Positioner* o = joy[3] = new Fl_Positioner(5, 265, 230, 220, "LFO 3 (controls audio carrier freq.)");
      o->box(FL_DOWN_BOX);
      o->color((Fl_Color)44);
      o->selection_color((Fl_Color)1);
      o->labeltype(FL_NORMAL_LABEL);
      o->labelfont(0);
      o->labelsize(12);
      o->labelcolor(FL_BLACK);
      o->callback((Fl_Callback*)cb_joy2);
      o->align(130);
      o->when(3);
    }
    { Fl_Positioner* o = joy[4] = new Fl_Positioner(250, 265, 230, 220, "Audio modulator base amp. and freq.");
      o->box(FL_DOWN_BOX);
      o->color((Fl_Color)44);
      o->selection_color((Fl_Color)1);
      o->labeltype(FL_NORMAL_LABEL);
      o->labelfont(0);
      o->labelsize(12);
      o->labelcolor(FL_BLACK);
      o->callback((Fl_Callback*)cb_joy3);
      o->align(130);
      o->when(3);
    }
    { Fl_Slider* o = CarrierFreq = new Fl_Slider(135, 625, 500, 20, "Audio carrier base freq.");
      o->type(5);
      o->box(FL_FLAT_BOX);
      o->selection_color((Fl_Color)176);
      o->labelsize(12);
      o->labelcolor(FL_FOREGROUND_COLOR);
      o->value(0.3);
      o->callback((Fl_Callback*)cb_CarrierFreq);
      o->align(FL_ALIGN_LEFT);
    }
    { Fl_DrawShape* o = tableShape[0] = new Fl_DrawShape(490, 10, 315, 115, "Table 1");
      o->box(FL_ENGRAVED_BOX);
      o->color(FL_LIGHT3);
      o->selection_color(FL_BACKGROUND_COLOR);
      o->labeltype(FL_NORMAL_LABEL);
      o->labelfont(0);
      o->labelsize(14);
      o->labelcolor(FL_BLACK);
      o->align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE);
      o->when(FL_WHEN_RELEASE);
    }
    { Fl_Group* o = new Fl_Group(490, 490, 150, 130, "Define table shapes");
      o->box(FL_ENGRAVED_FRAME);
      o->color((Fl_Color)41);
      o->labeltype(FL_ENGRAVED_LABEL);
      o->labelsize(16);
      o->labelcolor(FL_DARK3);
      o->align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE);
      { Fl_Choice* o = chTable[0] = new Fl_Choice(540, 515, 90, 20, "Table1");
        o->down_box(FL_BORDER_BOX);
        o->labelsize(12);
        o->callback((Fl_Callback*)cb_chTable);
        o->menu(menu_chTable);
      }
      { Fl_Choice* o = chTable[1] = new Fl_Choice(540, 540, 90, 20, "Table2");
        o->down_box(FL_BORDER_BOX);
        o->labelsize(12);
        o->callback((Fl_Callback*)cb_chTable1);
        o->menu(menu_chTable1);
      }
      { Fl_Choice* o = chTable[2] = new Fl_Choice(540, 565, 90, 20, "Table3");
        o->down_box(FL_BORDER_BOX);
        o->labelsize(12);
        o->callback((Fl_Callback*)cb_chTable2);
        o->menu(menu_chTable2);
      }
      { Fl_Choice* o = chTable[3] = new Fl_Choice(540, 590, 90, 20, "Table4");
        o->down_box(FL_BORDER_BOX);
        o->labelsize(12);
        o->callback((Fl_Callback*)cb_chTable3);
        o->menu(menu_chTable3);
      }
      o->end();
    }
    { Fl_Group* o = new Fl_Group(645, 490, 160, 160, "Assign tables");
      o->box(FL_ENGRAVED_FRAME);
      o->color((Fl_Color)41);
      o->labeltype(FL_ENGRAVED_LABEL);
      o->labelsize(16);
      o->labelcolor(FL_DARK3);
      o->align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE);
      { Fl_Choice* o = chOscShape[0] = new Fl_Choice(710, 515, 85, 15, "LFO1");
        o->down_box(FL_DOWN_BOX);
        o->labelsize(12);
        o->callback((Fl_Callback*)cb_chOscShape);
        o->menu(menu_chOscShape);
      }
      { Fl_Choice* o = chOscShape[1] = new Fl_Choice(710, 535, 85, 15, "LFO2");
        o->down_box(FL_DOWN_BOX);
        o->labelsize(12);
        o->callback((Fl_Callback*)cb_chOscShape1);
        o->menu(menu_chOscShape1);
      }
      { Fl_Choice* o = chOscShape[2] = new Fl_Choice(710, 555, 85, 15, "LFO3");
        o->down_box(FL_DOWN_BOX);
        o->labelsize(12);
        o->callback((Fl_Callback*)cb_chOscShape2);
        o->menu(menu_chOscShape2);
      }
      { Fl_Choice* o = chOscShape[4] = new Fl_Choice(710, 605, 85, 15, "modulator");
        o->down_box(FL_DOWN_BOX);
        o->labelsize(12);
        o->callback((Fl_Callback*)cb_chOscShape3);
        o->menu(menu_chOscShape3);
      }
      { Fl_Choice* o = chOscShape[5] = new Fl_Choice(710, 625, 85, 15, "carrier");
        o->down_box(FL_DOWN_BOX);
        o->labelsize(12);
        o->callback((Fl_Callback*)cb_chOscShape4);
        o->menu(menu_chOscShape4);
      }
      { Fl_Choice* o = chOscShape[3] = new Fl_Choice(710, 575, 85, 15, "LFO4");
        o->down_box(FL_DOWN_BOX);
        o->labelsize(12);
        o->callback((Fl_Callback*)cb_chOscShape5);
        o->menu(menu_chOscShape5);
      }
      o->end();
    }
    { Fl_DrawShape* o = tableShape[1] = new Fl_DrawShape(490, 130, 315, 115, "Table 2");
      o->box(FL_ENGRAVED_BOX);
      o->color(FL_LIGHT3);
      o->selection_color(FL_BACKGROUND_COLOR);
      o->labeltype(FL_NORMAL_LABEL);
      o->labelfont(0);
      o->labelsize(14);
      o->labelcolor(FL_BLACK);
      o->align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE);
      o->when(FL_WHEN_RELEASE);
    }
    { Fl_DrawShape* o = tableShape[2] = new Fl_DrawShape(490, 250, 315, 115, "Table 3");
      o->box(FL_ENGRAVED_BOX);
      o->color(FL_LIGHT3);
      o->selection_color(FL_BACKGROUND_COLOR);
      o->labeltype(FL_NORMAL_LABEL);
      o->labelfont(0);
      o->labelsize(14);
      o->labelcolor(FL_BLACK);
      o->align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE);
      o->when(FL_WHEN_RELEASE);
    }
    { Fl_DrawShape* o = tableShape[3] = new Fl_DrawShape(490, 370, 315, 115, "Table 4");
      o->box(FL_ENGRAVED_BOX);
      o->color(FL_LIGHT3);
      o->selection_color(FL_BACKGROUND_COLOR);
      o->labeltype(FL_NORMAL_LABEL);
      o->labelfont(0);
      o->labelsize(14);
      o->labelcolor(FL_BLACK);
      o->align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE);
      o->when(FL_WHEN_RELEASE);
    }
    { Fl_Slider* o = LFO4freq = new Fl_Slider(10, 530, 470, 25, "LFO 4 (controls audio carrier amplitude)");
      o->type(5);
      o->box(FL_ENGRAVED_BOX);
      o->color((Fl_Color)44);
      o->selection_color((Fl_Color)128);
      o->labelsize(12);
      o->callback((Fl_Callback*)cb_LFO4freq);
    }
    make_menu();
    o->end();
  }
}

void LFO6gui::customWave(int index) {
  Fl_Double_Window* w;
  tableIndex[0]=index;
  { Fl_Double_Window* o = customWavWindow = new Fl_Double_Window(382, 356, "Custom set waveform");
    w = o;
    o->user_data((void*)(this));
    { Fl_Value_Input* o = numHarm[0] = new Fl_Value_Input(165, 265, 30, 25, "harm");
      o->labelsize(12);
      o->minimum(1);
      o->maximum(1000);
      o->step(0.5);
      o->value(1);
      o->align(130);
    }
    { Fl_Value_Slider* o = levelHarm[0] = new Fl_Value_Slider(165, 5, 30, 250);
      o->type(4);
      o->box(FL_FLAT_BOX);
      o->selection_color(FL_BLUE);
      o->labelsize(12);
      o->minimum(1);
      o->maximum(0);
      o->callback((Fl_Callback*)cb_levelHarm);
      o->when(FL_WHEN_RELEASE);
    }
    { Fl_Value_Input* o = numHarm[1] = new Fl_Value_Input(200, 265, 30, 25, "harm");
      o->labelsize(12);
      o->minimum(1);
      o->maximum(1000);
      o->step(0.5);
      o->value(2);
      o->align(130);
    }
    { Fl_Value_Slider* o = levelHarm[1] = new Fl_Value_Slider(200, 5, 30, 250);
      o->type(4);
      o->box(FL_FLAT_BOX);
      o->selection_color(FL_BLUE);
      o->labelsize(12);
      o->minimum(1);
      o->maximum(0);
      o->callback((Fl_Callback*)cb_levelHarm1);
      o->when(FL_WHEN_RELEASE);
    }
    { Fl_Value_Input* o = numHarm[2] = new Fl_Value_Input(235, 265, 30, 25, "harm");
      o->labelsize(12);
      o->minimum(1);
      o->maximum(1000);
      o->step(0.5);
      o->value(3);
      o->align(130);
    }
    { Fl_Value_Slider* o = levelHarm[2] = new Fl_Value_Slider(235, 5, 30, 250);
      o->type(4);
      o->box(FL_FLAT_BOX);
      o->selection_color(FL_BLUE);
      o->labelsize(12);
      o->minimum(1);
      o->maximum(0);
      o->callback((Fl_Callback*)cb_levelHarm2);
      o->when(FL_WHEN_RELEASE);
    }
    { Fl_Value_Input* o = numHarm[3] = new Fl_Value_Input(270, 265, 30, 25, "harm");
      o->labelsize(12);
      o->minimum(1);
      o->maximum(1000);
      o->step(0.5);
      o->value(4);
      o->align(130);
    }
    { Fl_Value_Slider* o = levelHarm[3] = new Fl_Value_Slider(270, 5, 30, 250);
      o->type(4);
      o->box(FL_FLAT_BOX);
      o->selection_color(FL_BLUE);
      o->labelsize(12);
      o->minimum(1);
      o->maximum(0);
      o->callback((Fl_Callback*)cb_levelHarm3);
      o->when(FL_WHEN_RELEASE);
    }
    { Fl_Value_Input* o = numHarm[4] = new Fl_Value_Input(305, 265, 30, 25, "harm");
      o->labelsize(12);
      o->minimum(1);
      o->maximum(1000);
      o->step(0.5);
      o->value(5);
      o->align(130);
    }
    { Fl_Value_Slider* o = levelHarm[4] = new Fl_Value_Slider(305, 5, 30, 250);
      o->type(4);
      o->box(FL_FLAT_BOX);
      o->selection_color(FL_BLUE);
      o->labelsize(12);
      o->minimum(1);
      o->maximum(0);
      o->callback((Fl_Callback*)cb_levelHarm4);
      o->when(FL_WHEN_RELEASE);
    }
    { Fl_Value_Input* o = numHarm[5] = new Fl_Value_Input(340, 265, 30, 25, "harm");
      o->labelsize(12);
      o->minimum(1);
      o->maximum(1000);
      o->step(0.5);
      o->value(6);
      o->align(130);
    }
    { Fl_Value_Slider* o = levelHarm[5] = new Fl_Value_Slider(340, 5, 30, 250);
      o->type(4);
      o->box(FL_FLAT_BOX);
      o->selection_color(FL_BLUE);
      o->labelsize(12);
      o->minimum(1);
      o->maximum(0);
      o->callback((Fl_Callback*)cb_levelHarm5);
      o->when(FL_WHEN_RELEASE);
    }
    { Fl_Button* o = new Fl_Button(10, 325, 70, 25, "Compute");
      o->callback((Fl_Callback*)cb_Compute);
    }
    { Fl_Return_Button* o = new Fl_Return_Button(85, 325, 50, 25, "Exit");
      o->callback((Fl_Callback*)cb_Exit);
    }
    { Fl_Box* o = new Fl_Box(5, 215, 155, 100, "Build your custom wave with a sum of 6 partials having various base shapes. Y\
ou can redefine the shape, order number, amplitude and phase, independently fo\
r each partial, starting from the shapes chosen above");
      o->labelsize(11);
      o->labelcolor((Fl_Color)176);
      o->align(132|FL_ALIGN_INSIDE);
    }
    { Fl_Group* o = new Fl_Group(5, 10, 140, 195, "Select the base shape, please");
      o->box(FL_ENGRAVED_FRAME);
      o->color((Fl_Color)41);
      o->labeltype(FL_ENGRAVED_LABEL);
      o->labelcolor((Fl_Color)42);
      o->align(133|FL_ALIGN_INSIDE);
      { Fl_Choice* o = chPartial[0] = new Fl_Choice(45, 50, 90, 20, "part.1");
        o->down_box(FL_BORDER_BOX);
        o->labelsize(12);
        o->callback((Fl_Callback*)cb_chPartial);
        o->menu(menu_chPartial);
      }
      { Fl_Choice* o = chPartial[1] = new Fl_Choice(45, 75, 90, 20, "part.2");
        o->down_box(FL_BORDER_BOX);
        o->labelsize(12);
        o->callback((Fl_Callback*)cb_chPartial1);
        o->menu(menu_chPartial1);
      }
      { Fl_Choice* o = chPartial[2] = new Fl_Choice(45, 100, 90, 20, "part.3");
        o->down_box(FL_BORDER_BOX);
        o->labelsize(12);
        o->callback((Fl_Callback*)cb_chPartial2);
        o->menu(menu_chPartial2);
      }
      { Fl_Choice* o = chPartial[3] = new Fl_Choice(45, 125, 90, 20, "part.4");
        o->down_box(FL_BORDER_BOX);
        o->labelsize(12);
        o->callback((Fl_Callback*)cb_chPartial3);
        o->menu(menu_chPartial3);
      }
      { Fl_Choice* o = chPartial[4] = new Fl_Choice(45, 150, 90, 20, "part.5");
        o->down_box(FL_BORDER_BOX);
        o->labelsize(12);
        o->callback((Fl_Callback*)cb_chPartial4);
        o->menu(menu_chPartial4);
      }
      { Fl_Choice* o = chPartial[5] = new Fl_Choice(45, 175, 90, 20, "part.6");
        o->down_box(FL_BORDER_BOX);
        o->labelsize(12);
        o->callback((Fl_Callback*)cb_chPartial5);
        o->menu(menu_chPartial5);
      }
      o->end();
    }
    { Fl_Value_Input* o = phsHarm[0] = new Fl_Value_Input(165, 310, 30, 25, "phs");
      o->box(FL_SHADOW_BOX);
      o->labelsize(12);
      o->step(0.01);
      o->callback((Fl_Callback*)cb_phsHarm);
      o->align(130);
      o->when(FL_WHEN_RELEASE);
    }
    { Fl_Value_Input* o = phsHarm[1] = new Fl_Value_Input(200, 310, 30, 25, "phs");
      o->box(FL_SHADOW_BOX);
      o->labelsize(12);
      o->step(0.01);
      o->callback((Fl_Callback*)cb_phsHarm1);
      o->align(130);
      o->when(FL_WHEN_RELEASE);
    }
    { Fl_Value_Input* o = phsHarm[2] = new Fl_Value_Input(235, 310, 30, 25, "phs");
      o->box(FL_SHADOW_BOX);
      o->labelsize(12);
      o->step(0.01);
      o->callback((Fl_Callback*)cb_phsHarm2);
      o->align(130);
      o->when(FL_WHEN_RELEASE);
    }
    { Fl_Value_Input* o = phsHarm[3] = new Fl_Value_Input(270, 310, 30, 25, "phs");
      o->box(FL_SHADOW_BOX);
      o->labelsize(12);
      o->step(0.01);
      o->callback((Fl_Callback*)cb_phsHarm3);
      o->align(130);
      o->when(FL_WHEN_RELEASE);
    }
    { Fl_Value_Input* o = phsHarm[4] = new Fl_Value_Input(305, 310, 30, 25, "phs");
      o->box(FL_SHADOW_BOX);
      o->labelsize(12);
      o->step(0.01);
      o->callback((Fl_Callback*)cb_phsHarm4);
      o->align(130);
      o->when(FL_WHEN_RELEASE);
    }
    { Fl_Value_Input* o = phsHarm[5] = new Fl_Value_Input(340, 310, 30, 25, "phs");
      o->box(FL_SHADOW_BOX);
      o->labelsize(12);
      o->step(0.01);
      o->callback((Fl_Callback*)cb_phsHarm5);
      o->align(130);
      o->when(FL_WHEN_RELEASE);
    }
    o->end();
  }
  customWavWindow->show();
}

Fl_Double_Window* LFO6gui::stepSequencer(int index) {
  Fl_Double_Window* w;
  tableIndex[1]=index;
  { Fl_Double_Window* o = stepSeqWindow = new Fl_Double_Window(426, 320, "Step sequencer");
    w = o;
    o->user_data((void*)(this));
    { Fl_Value_Input* o = numSteps = new Fl_Value_Input(15, 50, 80, 25, "Number of active steps");
      o->labelsize(12);
      o->minimum(2);
      o->maximum(24);
      o->step(1);
      o->value(8);
      o->callback((Fl_Callback*)cb_numSteps);
      o->align(129);
      o->when(FL_WHEN_RELEASE);
    }
    { Fl_Button* o = new Fl_Button(5, 245, 105, 30, "Compute");
      o->callback((Fl_Callback*)cb_Compute1);
    }
    { Fl_Return_Button* o = new Fl_Return_Button(5, 280, 105, 30, "Exit");
      o->callback((Fl_Callback*)cb_Exit1);
    }
    { Fl_Scroll* o = new Fl_Scroll(115, 5, 302, 305);
      o->box(FL_DOWN_BOX);
      new Fl_Box(115, 125, 20, 25);
      { Fl_Value_Input* o = stepDur[0] = new Fl_Value_Input(125, 255, 30, 25, "dur");
        o->labelsize(11);
        o->minimum(1);
        o->maximum(1000);
        o->step(0.25);
        o->value(1);
        o->textsize(11);
        o->align(129);
      }
      { Fl_Value_Slider* o = stepLevel[0] = new Fl_Value_Slider(125, 10, 30, 230);
        o->type(4);
        o->box(FL_FLAT_BOX);
        o->selection_color(FL_MAGENTA);
        o->labelsize(12);
        o->minimum(1);
        o->maximum(0);
        o->callback((Fl_Callback*)cb_stepLevel);
        o->when(FL_WHEN_RELEASE);
      }
      { Fl_Value_Input* o = stepDur[1] = new Fl_Value_Input(160, 255, 30, 25, "dur");
        o->labelsize(11);
        o->minimum(1);
        o->maximum(1000);
        o->step(0.25);
        o->value(1);
        o->textsize(11);
        o->align(129);
      }
      { Fl_Value_Slider* o = stepLevel[1] = new Fl_Value_Slider(160, 10, 30, 230);
        o->type(4);
        o->box(FL_FLAT_BOX);
        o->selection_color(FL_MAGENTA);
        o->labelsize(12);
        o->minimum(1);
        o->maximum(0);
        o->callback((Fl_Callback*)cb_stepLevel1);
        o->when(FL_WHEN_RELEASE);
      }
      { Fl_Value_Input* o = stepDur[2] = new Fl_Value_Input(195, 255, 30, 25, "dur");
        o->labelsize(11);
        o->minimum(1);
        o->maximum(1000);
        o->step(0.25);
        o->value(1);
        o->textsize(11);
        o->align(129);
      }
      { Fl_Value_Slider* o = stepLevel[2] = new Fl_Value_Slider(195, 10, 30, 230);
        o->type(4);
        o->box(FL_FLAT_BOX);
        o->selection_color(FL_MAGENTA);
        o->labelsize(12);
        o->minimum(1);
        o->maximum(0);
        o->callback((Fl_Callback*)cb_stepLevel2);
        o->when(FL_WHEN_RELEASE);
      }
      { Fl_Value_Input* o = stepDur[3] = new Fl_Value_Input(230, 255, 30, 25, "dur");
        o->labelsize(11);
        o->minimum(1);
        o->maximum(1000);
        o->step(0.25);
        o->value(1);
        o->textsize(11);
        o->align(129);
      }
      { Fl_Value_Slider* o = stepLevel[3] = new Fl_Value_Slider(230, 10, 30, 230);
        o->type(4);
        o->box(FL_FLAT_BOX);
        o->selection_color(FL_MAGENTA);
        o->labelsize(12);
        o->minimum(1);
        o->maximum(0);
        o->callback((Fl_Callback*)cb_stepLevel3);
        o->when(FL_WHEN_RELEASE);
      }
      { Fl_Value_Input* o = stepDur[4] = new Fl_Value_Input(275, 255, 30, 25, "dur");
        o->labelsize(11);
        o->minimum(1);
        o->maximum(1000);
        o->step(0.25);
        o->value(1);
        o->textsize(11);
        o->align(129);
      }
      { Fl_Value_Slider* o = stepLevel[4] = new Fl_Value_Slider(275, 10, 30, 230);
        o->type(4);
        o->box(FL_FLAT_BOX);
        o->selection_color(FL_MAGENTA);
        o->labelsize(12);
        o->minimum(1);
        o->maximum(0);
        o->callback((Fl_Callback*)cb_stepLevel4);
        o->when(FL_WHEN_RELEASE);
      }
      { Fl_Value_Input* o = stepDur[5] = new Fl_Value_Input(310, 255, 30, 25, "dur");
        o->labelsize(11);
        o->minimum(1);
        o->maximum(1000);
        o->step(0.25);
        o->value(1);
        o->textsize(11);
        o->align(129);
      }
      { Fl_Value_Slider* o = stepLevel[5] = new Fl_Value_Slider(310, 10, 30, 230);
        o->type(4);
        o->box(FL_FLAT_BOX);
        o->selection_color(FL_MAGENTA);
        o->labelsize(12);
        o->minimum(1);
        o->maximum(0);
        o->callback((Fl_Callback*)cb_stepLevel5);
        o->when(FL_WHEN_RELEASE);
      }
      { Fl_Value_Input* o = stepDur[6] = new Fl_Value_Input(345, 255, 30, 25, "dur");
        o->labelsize(11);
        o->minimum(1);
        o->maximum(1000);
        o->step(0.25);
        o->value(1);
        o->textsize(11);
        o->align(129);
      }
      { Fl_Value_Slider* o = stepLevel[6] = new Fl_Value_Slider(345, 10, 30, 230);
        o->type(4);
        o->box(FL_FLAT_BOX);
        o->selection_color(FL_MAGENTA);
        o->labelsize(12);
        o->minimum(1);
        o->maximum(0);
        o->callback((Fl_Callback*)cb_stepLevel6);
        o->when(FL_WHEN_RELEASE);
      }
      { Fl_Value_Input* o = stepDur[7] = new Fl_Value_Input(380, 255, 30, 25, "dur");
        o->labelsize(11);
        o->minimum(1);
        o->maximum(1000);
        o->step(0.25);
        o->value(1);
        o->textsize(11);
        o->align(129);
      }
      { Fl_Value_Slider* o = stepLevel[7] = new Fl_Value_Slider(380, 10, 30, 230);
        o->type(4);
        o->box(FL_FLAT_BOX);
        o->selection_color(FL_MAGENTA);
        o->labelsize(12);
        o->minimum(1);
        o->maximum(0);
        o->callback((Fl_Callback*)cb_stepLevel7);
        o->when(FL_WHEN_RELEASE);
      }
      { Fl_Value_Input* o = stepDur[8] = new Fl_Value_Input(430, 255, 30, 25, "dur");
        o->labelsize(11);
        o->minimum(1);
        o->maximum(1000);
        o->step(0.25);
        o->value(1);
        o->textsize(11);
        o->align(129);
      }
      { Fl_Value_Slider* o = stepLevel[8] = new Fl_Value_Slider(430, 10, 30, 230);
        o->type(4);
        o->box(FL_FLAT_BOX);
        o->selection_color(FL_MAGENTA);
        o->labelsize(12);
        o->minimum(1);
        o->maximum(0);
        o->callback((Fl_Callback*)cb_stepLevel8);
        o->when(FL_WHEN_RELEASE);
      }
      { Fl_Value_Input* o = stepDur[9] = new Fl_Value_Input(465, 255, 30, 25, "dur");
        o->labelsize(11);
        o->minimum(1);
        o->maximum(1000);
        o->step(0.25);
        o->value(1);
        o->textsize(11);
        o->align(129);
      }
      { Fl_Value_Slider* o = stepLevel[9] = new Fl_Value_Slider(465, 10, 30, 230);
        o->type(4);
        o->box(FL_FLAT_BOX);
        o->selection_color(FL_MAGENTA);
        o->labelsize(12);
        o->minimum(1);
        o->maximum(0);
        o->callback((Fl_Callback*)cb_stepLevel9);
        o->when(FL_WHEN_RELEASE);
      }
      { Fl_Value_Input* o = stepDur[10] = new Fl_Value_Input(500, 255, 30, 25, "dur");
        o->labelsize(11);
        o->minimum(1);
        o->maximum(1000);
        o->step(0.25);
        o->value(1);
        o->textsize(11);
        o->align(129);
      }
      { Fl_Value_Slider* o = stepLevel[10] = new Fl_Value_Slider(500, 10, 30, 230);
        o->type(4);
        o->box(FL_FLAT_BOX);
        o->selection_color(FL_MAGENTA);
        o->labelsize(12);
        o->minimum(1);
        o->maximum(0);
        o->callback((Fl_Callback*)cb_stepLevela);
        o->when(FL_WHEN_RELEASE);
      }
      { Fl_Value_Input* o = stepDur[11] = new Fl_Value_Input(535, 255, 30, 25, "dur");
        o->labelsize(11);
        o->minimum(1);
        o->maximum(1000);
        o->step(0.25);
        o->value(1);
        o->textsize(11);
        o->align(129);
      }
      { Fl_Value_Slider* o = stepLevel[11] = new Fl_Value_Slider(535, 10, 30, 230);
        o->type(4);
        o->box(FL_FLAT_BOX);
        o->selection_color(FL_MAGENTA);
        o->labelsize(12);
        o->minimum(1);
        o->maximum(0);
        o->callback((Fl_Callback*)cb_stepLevelb);
        o->when(FL_WHEN_RELEASE);
      }
      { Fl_Value_Input* o = stepDur[12] = new Fl_Value_Input(580, 255, 30, 25, "dur");
        o->labelsize(11);
        o->minimum(1);
        o->maximum(1000);
        o->step(0.25);
        o->value(1);
        o->textsize(11);
        o->align(129);
      }
      { Fl_Value_Slider* o = stepLevel[12] = new Fl_Value_Slider(580, 10, 30, 230);
        o->type(4);
        o->box(FL_FLAT_BOX);
        o->selection_color(FL_MAGENTA);
        o->labelsize(12);
        o->minimum(1);
        o->maximum(0);
        o->callback((Fl_Callback*)cb_stepLevelc);
        o->when(FL_WHEN_RELEASE);
      }
      { Fl_Value_Input* o = stepDur[13] = new Fl_Value_Input(615, 255, 30, 25, "dur");
        o->labelsize(11);
        o->minimum(1);
        o->maximum(1000);
        o->step(0.25);
        o->value(1);
        o->textsize(11);
        o->align(129);
      }
      { Fl_Value_Slider* o = stepLevel[13] = new Fl_Value_Slider(615, 10, 30, 230);
        o->type(4);
        o->box(FL_FLAT_BOX);
        o->selection_color(FL_MAGENTA);
        o->labelsize(12);
        o->minimum(1);
        o->maximum(0);
        o->callback((Fl_Callback*)cb_stepLeveld);
        o->when(FL_WHEN_RELEASE);
      }
      { Fl_Value_Input* o = stepDur[14] = new Fl_Value_Input(650, 255, 30, 25, "dur");
        o->labelsize(11);
        o->minimum(1);
        o->maximum(1000);
        o->step(0.25);
        o->value(1);
        o->textsize(11);
        o->align(129);
      }
      { Fl_Value_Slider* o = stepLevel[14] = new Fl_Value_Slider(650, 10, 30, 230);
        o->type(4);
        o->box(FL_FLAT_BOX);
        o->selection_color(FL_MAGENTA);
        o->labelsize(12);
        o->minimum(1);
        o->maximum(0);
        o->callback((Fl_Callback*)cb_stepLevele);
        o->when(FL_WHEN_RELEASE);
      }
      { Fl_Value_Input* o = stepDur[15] = new Fl_Value_Input(685, 255, 30, 25, "dur");
        o->labelsize(11);
        o->minimum(1);
        o->maximum(1000);
        o->step(0.25);
        o->value(1);
        o->textsize(11);
        o->align(129);
      }
      { Fl_Value_Slider* o = stepLevel[15] = new Fl_Value_Slider(685, 10, 30, 230);
        o->type(4);
        o->box(FL_FLAT_BOX);
        o->selection_color(FL_MAGENTA);
        o->labelsize(12);
        o->minimum(1);
        o->maximum(0);
        o->callback((Fl_Callback*)cb_stepLevelf);
        o->when(FL_WHEN_RELEASE);
      }
      { Fl_Value_Input* o = stepDur[16] = new Fl_Value_Input(735, 255, 30, 25, "dur");
        o->labelsize(11);
        o->minimum(1);
        o->maximum(1000);
        o->step(0.25);
        o->value(1);
        o->textsize(11);
        o->align(129);
      }
      { Fl_Value_Slider* o = stepLevel[16] = new Fl_Value_Slider(735, 10, 30, 230);
        o->type(4);
        o->box(FL_FLAT_BOX);
        o->selection_color(FL_MAGENTA);
        o->labelsize(12);
        o->minimum(1);
        o->maximum(0);
        o->callback((Fl_Callback*)cb_stepLevel10);
        o->when(FL_WHEN_RELEASE);
      }
      { Fl_Value_Input* o = stepDur[17] = new Fl_Value_Input(770, 255, 30, 25, "dur");
        o->labelsize(11);
        o->minimum(1);
        o->maximum(1000);
        o->step(0.25);
        o->value(1);
        o->textsize(11);
        o->align(129);
      }
      { Fl_Value_Slider* o = stepLevel[17] = new Fl_Value_Slider(770, 10, 30, 230);
        o->type(4);
        o->box(FL_FLAT_BOX);
        o->selection_color(FL_MAGENTA);
        o->labelsize(12);
        o->minimum(1);
        o->maximum(0);
        o->callback((Fl_Callback*)cb_stepLevel11);
        o->when(FL_WHEN_RELEASE);
      }
      { Fl_Value_Input* o = stepDur[18] = new Fl_Value_Input(805, 255, 30, 25, "dur");
        o->labelsize(11);
        o->minimum(1);
        o->maximum(1000);
        o->step(0.25);
        o->value(1);
        o->textsize(11);
        o->align(129);
      }
      { Fl_Value_Slider* o = stepLevel[18] = new Fl_Value_Slider(805, 10, 30, 230);
        o->type(4);
        o->box(FL_FLAT_BOX);
        o->selection_color(FL_MAGENTA);
        o->labelsize(12);
        o->minimum(1);
        o->maximum(0);
        o->callback((Fl_Callback*)cb_stepLevel12);
        o->when(FL_WHEN_RELEASE);
      }
      { Fl_Value_Input* o = stepDur[19] = new Fl_Value_Input(840, 255, 30, 25, "dur");
        o->labelsize(11);
        o->minimum(1);
        o->maximum(1000);
        o->step(0.25);
        o->value(1);
        o->textsize(11);
        o->align(129);
      }
      { Fl_Value_Slider* o = stepLevel[19] = new Fl_Value_Slider(840, 10, 30, 230);
        o->type(4);
        o->box(FL_FLAT_BOX);
        o->selection_color(FL_MAGENTA);
        o->labelsize(12);
        o->minimum(1);
        o->maximum(0);
        o->callback((Fl_Callback*)cb_stepLevel13);
        o->when(FL_WHEN_RELEASE);
      }
      { Fl_Value_Input* o = stepDur[20] = new Fl_Value_Input(885, 255, 30, 25, "dur");
        o->labelsize(11);
        o->minimum(1);
        o->maximum(1000);
        o->step(0.25);
        o->value(1);
        o->textsize(11);
        o->align(129);
      }
      { Fl_Value_Slider* o = stepLevel[20] = new Fl_Value_Slider(885, 10, 30, 230);
        o->type(4);
        o->box(FL_FLAT_BOX);
        o->selection_color(FL_MAGENTA);
        o->labelsize(12);
        o->minimum(1);
        o->maximum(0);
        o->callback((Fl_Callback*)cb_stepLevel14);
        o->when(FL_WHEN_RELEASE);
      }
      { Fl_Value_Input* o = stepDur[21] = new Fl_Value_Input(920, 255, 30, 25, "dur");
        o->labelsize(11);
        o->minimum(1);
        o->maximum(1000);
        o->step(0.25);
        o->value(1);
        o->textsize(11);
        o->align(129);
      }
      { Fl_Value_Slider* o = stepLevel[21] = new Fl_Value_Slider(920, 10, 30, 230);
        o->type(4);
        o->box(FL_FLAT_BOX);
        o->selection_color(FL_MAGENTA);
        o->labelsize(12);
        o->minimum(1);
        o->maximum(0);
        o->callback((Fl_Callback*)cb_stepLevel15);
        o->when(FL_WHEN_RELEASE);
      }
      { Fl_Value_Input* o = stepDur[22] = new Fl_Value_Input(955, 255, 30, 25, "dur");
        o->labelsize(11);
        o->minimum(1);
        o->maximum(1000);
        o->step(0.25);
        o->value(1);
        o->textsize(11);
        o->align(129);
      }
      { Fl_Value_Slider* o = stepLevel[22] = new Fl_Value_Slider(955, 10, 30, 230);
        o->type(4);
        o->box(FL_FLAT_BOX);
        o->selection_color(FL_MAGENTA);
        o->labelsize(12);
        o->minimum(1);
        o->maximum(0);
        o->callback((Fl_Callback*)cb_stepLevel16);
        o->when(FL_WHEN_RELEASE);
      }
      { Fl_Value_Input* o = stepDur[23] = new Fl_Value_Input(990, 255, 30, 25, "dur");
        o->labelsize(11);
        o->minimum(1);
        o->maximum(1000);
        o->step(0.25);
        o->value(1);
        o->textsize(11);
        o->align(129);
      }
      { Fl_Value_Slider* o = stepLevel[23] = new Fl_Value_Slider(990, 10, 30, 230);
        o->type(4);
        o->box(FL_FLAT_BOX);
        o->selection_color(FL_MAGENTA);
        o->labelsize(12);
        o->minimum(1);
        o->maximum(0);
        o->callback((Fl_Callback*)cb_stepLevel17);
        o->when(FL_WHEN_RELEASE);
      }
      o->end();
      Fl_Group::current()->resizable(o);
    }
    o->end();
  }
  stepSeqWindow->show();
  return w;
}

Fl_Double_Window* LFO6gui::adsr(int index) {
  Fl_Double_Window* w;
  tableIndex[2]=index;
  { Fl_Double_Window* o = adsrWindow = new Fl_Double_Window(286, 314, "ADSR");
    w = o;
    o->user_data((void*)(this));
    { Fl_Value_Slider* o = sldAttak = new Fl_Value_Slider(20, 10, 30, 250, "Attak");
      o->type(4);
      o->box(FL_FLAT_BOX);
      o->selection_color(FL_BLUE);
      o->labelsize(11);
      o->minimum(1);
      o->maximum(0);
      o->callback((Fl_Callback*)cb_sldAttak);
      o->when(FL_WHEN_RELEASE);
    }
    { Fl_Value_Slider* o = sldDecay = new Fl_Value_Slider(65, 10, 30, 250, "Decay");
      o->type(4);
      o->box(FL_FLAT_BOX);
      o->selection_color(FL_BLUE);
      o->labelsize(11);
      o->minimum(1);
      o->maximum(0);
      o->value(0.2);
      o->callback((Fl_Callback*)cb_sldDecay);
      o->when(FL_WHEN_RELEASE);
    }
    { Fl_Value_Slider* o = sldSustain = new Fl_Value_Slider(110, 10, 30, 250, "Sustain");
      o->type(4);
      o->box(FL_FLAT_BOX);
      o->selection_color(FL_BLUE);
      o->labelsize(11);
      o->minimum(1);
      o->maximum(0);
      o->value(0.5);
      o->callback((Fl_Callback*)cb_sldSustain);
      o->when(FL_WHEN_RELEASE);
    }
    { Fl_Value_Slider* o = sldRelease = new Fl_Value_Slider(155, 10, 30, 250, "Release");
      o->type(4);
      o->box(FL_FLAT_BOX);
      o->selection_color(FL_BLUE);
      o->labelsize(11);
      o->minimum(1);
      o->maximum(0);
      o->value(0.1);
      o->callback((Fl_Callback*)cb_sldRelease);
      o->when(FL_WHEN_RELEASE);
    }
    { Fl_Value_Slider* o = sldSustDur = new Fl_Value_Slider(200, 10, 30, 250, "Sustain dur.");
      o->type(4);
      o->box(FL_ENGRAVED_BOX);
      o->color((Fl_Color)53);
      o->selection_color((Fl_Color)128);
      o->labelsize(11);
      o->minimum(1);
      o->maximum(0);
      o->value(0.5);
      o->callback((Fl_Callback*)cb_sldSustDur);
      o->align(130);
      o->when(FL_WHEN_RELEASE);
    }
    { Fl_Value_Slider* o = sldPauseDur = new Fl_Value_Slider(240, 10, 30, 250, "Pause dur.");
      o->type(4);
      o->box(FL_ENGRAVED_BOX);
      o->color((Fl_Color)53);
      o->selection_color((Fl_Color)128);
      o->labelsize(11);
      o->minimum(1);
      o->maximum(0);
      o->value(0.2);
      o->callback((Fl_Callback*)cb_sldPauseDur);
      o->align(130);
      o->when(FL_WHEN_RELEASE);
    }
    { Fl_Return_Button* o = new Fl_Return_Button(20, 280, 135, 25, "Exit");
      o->callback((Fl_Callback*)cb_Exit2);
    }
    o->end();
  }
  adsrWindow->show();
  return w;
}

void LFO6gui::show() {
  mainWindow->show();
}

void LFO6gui::bye() {
  mainWindow->hide();
}

void LFO6gui::joy_callback(int i) {
}

void LFO6gui::carrier_freq_callback() {
}

void LFO6gui::lfo4_freq_callback() {
}

void LFO6gui::customWave_callback(int tableIndex) {
}

void LFO6gui::stepSequencerCompute(int tableIndex) {
}

void LFO6gui::adsrCompute(int tableIndex) {
}

void LFO6gui::tableShape_callback(Fl_Choice* o, int tableIndex) {
}

void LFO6gui::oscTable_callback(Fl_Choice* o, int oscIndex) {
}
