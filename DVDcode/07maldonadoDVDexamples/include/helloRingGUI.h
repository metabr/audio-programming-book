// generated by Fast Light User Interface Designer (fluid) version 1.0104

#ifndef helloRingGUI_h
#define helloRingGUI_h
#include <FL/Fl.H>
#include <cmath>
#include "main_prot.h"
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Menu_Bar.H>
#include <FL/Fl_Dial.H>
#include <FL/Fl_Value_Output.H>
#include <FL/Fl_Value_Slider.H>
#include <FL/Fl_Output.H>
#include <FL/Fl_Browser.H>
#include <FL/Fl_Return_Button.H>

class RingModGUI {
  const double frqMin;
  const double frqMax;
  bool isInput;
public:
  bool isFreqUpdated;
  bool isVolUpdated;
  int inDevNum;
  int outDevNum;
  double freq1;
  double freq2;
  double wetVolume;
  double dryVolume;
  RingModGUI() ;
  Fl_Double_Window *mainWindow;
  static Fl_Menu_Item menu_[];
private:
  inline void cb_Choose_i(Fl_Menu_*, void*);
  static void cb_Choose(Fl_Menu_*, void*);
  inline void cb_Choose1_i(Fl_Menu_*, void*);
  static void cb_Choose1(Fl_Menu_*, void*);
  inline void cb_Start_i(Fl_Menu_*, void*);
  static void cb_Start(Fl_Menu_*, void*);
  inline void cb_Sto_i(Fl_Menu_*, void*);
  static void cb_Sto(Fl_Menu_*, void*);
  inline void cb_E_i(Fl_Menu_*, void*);
  static void cb_E(Fl_Menu_*, void*);
public:
  Fl_Dial *knobFrq1;
private:
  inline void cb_knobFrq1_i(Fl_Dial*, void*);
  static void cb_knobFrq1(Fl_Dial*, void*);
public:
  Fl_Dial *knobFrq2;
private:
  inline void cb_knobFrq2_i(Fl_Dial*, void*);
  static void cb_knobFrq2(Fl_Dial*, void*);
public:
  Fl_Value_Output *dispFrq1;
  Fl_Value_Output *dispFrq2;
  Fl_Value_Slider *sldrWetVol;
private:
  inline void cb_sldrWetVol_i(Fl_Value_Slider*, void*);
  static void cb_sldrWetVol(Fl_Value_Slider*, void*);
public:
  Fl_Value_Slider *sldrDryVol;
private:
  inline void cb_sldrDryVol_i(Fl_Value_Slider*, void*);
  static void cb_sldrDryVol(Fl_Value_Slider*, void*);
public:
  Fl_Output *txtInDev;
  Fl_Output *txtOutDev;
  void show();
  Fl_Double_Window* chooseDevice();
  Fl_Double_Window *chooseDev;
  Fl_Browser *brwDevSelect;
private:
  inline void cb_brwDevSelect_i(Fl_Browser*, void*);
  static void cb_brwDevSelect(Fl_Browser*, void*);
  inline void cb_OK_i(Fl_Return_Button*, void*);
  static void cb_OK(Fl_Return_Button*, void*);
};
#endif
